Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list return_statement _RBRACKET
    9     | _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 $@2: %empty

   13 variable: _TYPE $@2 id_list _SEMICOLON

   14 id_list: _ID
   15        | id_list _COMMA _ID

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement

   21 compound_statement: _LBRACKET statement_list _RBRACKET

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   23 num_exp: exp
   24        | num_exp _AROP exp

   25 inc_exp: _ID _INCOP
   26        | _INCOP _ID

   27 exp: literal
   28    | inc_exp
   29    | _ID
   30    | function_call
   31    | _LPAREN num_exp _RPAREN

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@3: %empty

   35 function_call: _ID $@3 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement

   41 rel_exp: num_exp _RELOP num_exp

   42 return_statement: _RETURN num_exp _SEMICOLON
   43                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 13
    _IF (259) 40
    _ELSE (260) 39
    _RETURN (261) 42 43
    _ID <s> (262) 5 7 14 15 22 25 26 29 35
    _INT_NUMBER <s> (263) 32
    _UINT_NUMBER <s> (264) 33
    _LPAREN (265) 5 31 35 40
    _RPAREN (266) 5 31 35 40
    _LBRACKET (267) 8 9 21
    _RBRACKET (268) 8 9 21
    _ASSIGN (269) 22
    _SEMICOLON (270) 13 22 42 43
    _COMMA (271) 15
    _AROP <i> (272) 24
    _RELOP <i> (273) 41
    _INCOP <i> (274) 25 26
    ONLY_IF (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    function_list (23)
        on left: 2 3
        on right: 1 3
    function (24)
        on left: 5
        on right: 2 3
    $@1 (25)
        on left: 4
        on right: 5
    parameter (26)
        on left: 6 7
        on right: 5
    body (27)
        on left: 8 9
        on right: 5
    variable_list (28)
        on left: 10 11
        on right: 8 9 11
    variable (29)
        on left: 13
        on right: 11
    $@2 (30)
        on left: 12
        on right: 13
    id_list (31)
        on left: 14 15
        on right: 13 15
    statement_list (32)
        on left: 16 17
        on right: 8 9 17 21
    statement (33)
        on left: 18 19 20
        on right: 17 39 40
    compound_statement (34)
        on left: 21
        on right: 18
    assignment_statement (35)
        on left: 22
        on right: 19
    num_exp <i> (36)
        on left: 23 24
        on right: 22 24 31 37 41 42
    inc_exp <i> (37)
        on left: 25 26
        on right: 28
    exp <i> (38)
        on left: 27 28 29 30 31
        on right: 23 24
    literal <i> (39)
        on left: 32 33
        on right: 27
    function_call <i> (40)
        on left: 35
        on right: 30
    $@3 (41)
        on left: 34
        on right: 35
    argument <i> (42)
        on left: 36 37
        on right: 35
    if_statement (43)
        on left: 38 39
        on right: 20
    if_part (44)
        on left: 40
        on right: 38 39
    rel_exp <i> (45)
        on left: 41
        on right: 40
    return_statement (46)
        on left: 42 43
        on right: 8


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list return_statement _RBRACKET
    9     | _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list return_statement _RBRACKET
    9     | _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 16 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   13 variable: _TYPE . $@2 id_list _SEMICOLON

    $default  reduce using rule 12 ($@2)

    $@2  go to state 20


State 18

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . return_statement _RBRACKET
    9     | _LBRACKET variable_list statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 25

    statement             go to state 26
    compound_statement    go to state 27
    assignment_statement  go to state 28
    if_statement          go to state 29
    if_part               go to state 30
    return_statement      go to state 31


State 20

   13 variable: _TYPE $@2 . id_list _SEMICOLON

    _ID  shift, and go to state 32

    id_list  go to state 33


State 21

   40 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 34


State 22

   42 return_statement: _RETURN . num_exp _SEMICOLON
   43                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _SEMICOLON    shift, and go to state 39
    _INCOP        shift, and go to state 40

    num_exp        go to state 41
    inc_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 23

   22 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 46


State 24

   21 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 47


State 25

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 26

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 27

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 28

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 29

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 30

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 48

    $default  reduce using rule 38 (if_statement)


State 31

    8 body: _LBRACKET variable_list statement_list return_statement . _RBRACKET

    _RBRACKET  shift, and go to state 49


State 32

   14 id_list: _ID .

    $default  reduce using rule 14 (id_list)


State 33

   13 variable: _TYPE $@2 id_list . _SEMICOLON
   15 id_list: id_list . _COMMA _ID

    _SEMICOLON  shift, and go to state 50
    _COMMA      shift, and go to state 51


State 34

   40 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _INCOP        shift, and go to state 40

    num_exp        go to state 52
    inc_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 53


State 35

   25 inc_exp: _ID . _INCOP
   29 exp: _ID .
   35 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INCOP  shift, and go to state 54

    _LPAREN   reduce using rule 34 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 55


State 36

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 37

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 38

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _INCOP        shift, and go to state 40

    num_exp        go to state 56
    inc_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 39

   43 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 40

   26 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 57


State 41

   24 num_exp: num_exp . _AROP exp
   42 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 58
    _AROP       shift, and go to state 59


State 42

   28 exp: inc_exp .

    $default  reduce using rule 28 (exp)


State 43

   23 num_exp: exp .

    $default  reduce using rule 23 (num_exp)


State 44

   27 exp: literal .

    $default  reduce using rule 27 (exp)


State 45

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 46

   22 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _INCOP        shift, and go to state 40

    num_exp        go to state 60
    inc_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 47

   17 statement_list: statement_list . statement
   21 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 61

    statement             go to state 26
    compound_statement    go to state 27
    assignment_statement  go to state 28
    if_statement          go to state 29
    if_part               go to state 30


State 48

   39 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24

    statement             go to state 62
    compound_statement    go to state 27
    assignment_statement  go to state 28
    if_statement          go to state 29
    if_part               go to state 30


State 49

    8 body: _LBRACKET variable_list statement_list return_statement _RBRACKET .

    $default  reduce using rule 8 (body)


State 50

   13 variable: _TYPE $@2 id_list _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 51

   15 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 63


State 52

   24 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 59
    _RELOP  shift, and go to state 64


State 53

   40 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 65


State 54

   25 inc_exp: _ID _INCOP .

    $default  reduce using rule 25 (inc_exp)


State 55

   35 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 66


State 56

   24 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 67
    _AROP    shift, and go to state 59


State 57

   26 inc_exp: _INCOP _ID .

    $default  reduce using rule 26 (inc_exp)


State 58

   42 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 42 (return_statement)


State 59

   24 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _INCOP        shift, and go to state 40

    inc_exp        go to state 42
    exp            go to state 68
    literal        go to state 44
    function_call  go to state 45


State 60

   22 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   24 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 69
    _AROP       shift, and go to state 59


State 61

   21 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 21 (compound_statement)


State 62

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 63

   15 id_list: id_list _COMMA _ID .

    $default  reduce using rule 15 (id_list)


State 64

   41 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _INCOP        shift, and go to state 40

    num_exp        go to state 70
    inc_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 65

   40 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24

    statement             go to state 71
    compound_statement    go to state 27
    assignment_statement  go to state 28
    if_statement          go to state 29
    if_part               go to state 30


State 66

   35 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38
    _INCOP        shift, and go to state 40

    $default  reduce using rule 36 (argument)

    num_exp        go to state 72
    inc_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 73


State 67

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 68

   24 num_exp: num_exp _AROP exp .

    $default  reduce using rule 24 (num_exp)


State 69

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 22 (assignment_statement)


State 70

   24 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 59

    $default  reduce using rule 41 (rel_exp)


State 71

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 40 (if_part)


State 72

   24 num_exp: num_exp . _AROP exp
   37 argument: num_exp .

    _AROP  shift, and go to state 59

    $default  reduce using rule 37 (argument)


State 73

   35 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 74


State 74

   35 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)
