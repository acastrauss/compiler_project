Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    7 real_param_list: %empty
    8                | parameter_list

    9 parameter_list: parameter
   10               | parameter_list _COMMA parameter

   11 parameter: _TYPE _ID

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list _RBRACKET

   14 variable_list: %empty
   15              | variable_list variable

   16 $@3: %empty

   17 variable: _TYPE $@3 id_list _SEMICOLON

   18 id_list: _ID
   19        | id_list _COMMA _ID

   20 statement_list: %empty
   21               | statement_list statement

   22 statement: compound_statement
   23          | assignment_statement
   24          | if_statement
   25          | exp_statement
   26          | para_statement
   27          | branch_statement

   28 $@4: %empty

   29 $@5: %empty

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

   31 $@6: %empty

   32 $@7: %empty

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

   34 paso_part: %empty
   35          | _PASO literal

   36 exp_statement: num_exp _SEMICOLON
   37              | bool_exp _SEMICOLON

   38 compound_statement: _LBRACKET statement_list _RBRACKET

   39 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   40                     | _ID _ASSIGN bool_exp _SEMICOLON

   41 num_exp: exp
   42        | num_exp _AROP exp

   43 basic_bool: _BOOL_VALUE
   44           | rel_exp
   45           | exp _BOOLOP basic_bool

   46 bool_exp: basic_bool
   47         | bool_exp _BOOLOP basic_bool

   48 inc_exp: _ID _INCOP
   49        | _INCOP _ID

   50 exp: literal
   51    | inc_exp
   52    | _ID
   53    | function_call
   54    | _LPAREN num_exp _RPAREN

   55 literal: _INT_NUMBER
   56        | _UINT_NUMBER

   57 $@8: %empty

   58 function_call: _ID $@8 _LPAREN real_arg_list _RPAREN

   59 real_arg_list: %empty
   60              | argument_list

   61 argument_list: argument
   62              | argument_list _COMMA argument

   63 argument: num_exp

   64 if_statement: if_part
   65             | if_part _ELSE statement

   66 if_part: _IF _LPAREN bool_exp _RPAREN statement

   67 rel_exp: num_exp _RELOP num_exp

   68 return_statement: _RETURN num_exp _SEMICOLON
   69                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 11 17
    _IF (259) 66
    _ELSE (260) 65
    _RETURN (261) 68 69
    _PARA <s> (262) 33
    _EN (263) 33
    _DDOT (264) 33
    _PASO (265) 35
    _BRANCH (266) 30
    _FIRST (267) 30
    _SECOND (268) 30
    _THIRD (269) 30
    _OTHERWISE (270) 30
    _ID <s> (271) 6 11 18 19 30 33 39 40 48 49 52 58
    _INT_NUMBER <s> (272) 55
    _UINT_NUMBER <s> (273) 56
    _BOOL_VALUE <s> (274) 43
    _LPAREN (275) 6 33 54 58 66
    _RPAREN (276) 6 33 54 58 66
    _LBRACKET (277) 12 13 38
    _RBRACKET (278) 12 13 38
    _LSQRBRACKET (279) 30
    _RSQRBRACKET (280) 30
    _ASSIGN (281) 39 40
    _SEMICOLON (282) 17 36 37 39 40 68 69
    _COMMA (283) 10 19 62
    _RARROW (284) 30
    _AROP <i> (285) 42
    _RELOP <i> (286) 67
    _INCOP <i> (287) 48 49
    _BOOLOP <i> (288) 45 47
    ONLY_IF (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    function_list (37)
        on left: 2 3
        on right: 1 3
    function (38)
        on left: 6
        on right: 2 3
    $@1 (39)
        on left: 4
        on right: 6
    $@2 (40)
        on left: 5
        on right: 6
    real_param_list (41)
        on left: 7 8
        on right: 6
    parameter_list (42)
        on left: 9 10
        on right: 8 10
    parameter (43)
        on left: 11
        on right: 9 10
    body (44)
        on left: 12 13
        on right: 6
    variable_list (45)
        on left: 14 15
        on right: 12 13 15
    variable (46)
        on left: 17
        on right: 15
    $@3 (47)
        on left: 16
        on right: 17
    id_list (48)
        on left: 18 19
        on right: 17 19
    statement_list (49)
        on left: 20 21
        on right: 12 13 21 38
    statement (50)
        on left: 22 23 24 25 26 27
        on right: 21 30 33 65 66
    branch_statement (51)
        on left: 30
        on right: 27
    $@4 (52)
        on left: 28
        on right: 30
    $@5 (53)
        on left: 29
        on right: 30
    para_statement (54)
        on left: 33
        on right: 26
    $@6 (55)
        on left: 31
        on right: 33
    $@7 (56)
        on left: 32
        on right: 33
    paso_part <i> (57)
        on left: 34 35
        on right: 33
    exp_statement (58)
        on left: 36 37
        on right: 25
    compound_statement (59)
        on left: 38
        on right: 22
    assignment_statement (60)
        on left: 39 40
        on right: 23
    num_exp <i> (61)
        on left: 41 42
        on right: 36 39 42 54 63 67 68
    basic_bool <i> (62)
        on left: 43 44 45
        on right: 45 46 47
    bool_exp <i> (63)
        on left: 46 47
        on right: 37 40 47 66
    inc_exp <i> (64)
        on left: 48 49
        on right: 51
    exp <i> (65)
        on left: 50 51 52 53 54
        on right: 41 42 45
    literal <i> (66)
        on left: 55 56
        on right: 30 33 35 50
    function_call <i> (67)
        on left: 58
        on right: 53
    $@8 (68)
        on left: 57
        on right: 58
    real_arg_list <i> (69)
        on left: 59 60
        on right: 58
    argument_list <i> (70)
        on left: 61 62
        on right: 60 62
    argument <i> (71)
        on left: 63
        on right: 61 62
    if_statement (72)
        on left: 64 65
        on right: 24
    if_part (73)
        on left: 66
        on right: 64 65
    rel_exp <i> (74)
        on left: 67
        on right: 44
    return_statement (75)
        on left: 68 69
        on right: 12


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN real_param_list $@2 _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN real_param_list $@2 _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . real_param_list $@2 _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (real_param_list)

    real_param_list  go to state 11
    parameter_list   go to state 12
    parameter        go to state 13


State 10

   11 parameter: _TYPE . _ID

    _ID  shift, and go to state 14


State 11

    6 function: _TYPE _ID $@1 _LPAREN real_param_list . $@2 _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 12

    8 real_param_list: parameter_list .
   10 parameter_list: parameter_list . _COMMA parameter

    _COMMA  shift, and go to state 16

    $default  reduce using rule 8 (real_param_list)


State 13

    9 parameter_list: parameter .

    $default  reduce using rule 9 (parameter_list)


State 14

   11 parameter: _TYPE _ID .

    $default  reduce using rule 11 (parameter)


State 15

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 . _RPAREN body

    _RPAREN  shift, and go to state 17


State 16

   10 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 10

    parameter  go to state 18


State 17

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 18

   10 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 10 (parameter_list)


State 19

   12 body: _LBRACKET . variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 14 (variable_list)

    variable_list  go to state 21


State 20

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body .

    $default  reduce using rule 6 (function)


State 21

   12 body: _LBRACKET variable_list . statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list . statement_list _RBRACKET
   15 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 20 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   17 variable: _TYPE . $@3 id_list _SEMICOLON

    $default  reduce using rule 16 ($@3)

    $@3  go to state 25


State 23

   15 variable_list: variable_list variable .

    $default  reduce using rule 15 (variable_list)


State 24

   12 body: _LBRACKET variable_list statement_list . return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list . _RBRACKET
   21 statement_list: statement_list . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _RBRACKET     shift, and go to state 36
    _INCOP        shift, and go to state 37

    statement             go to state 38
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53
    return_statement      go to state 54


State 25

   17 variable: _TYPE $@3 . id_list _SEMICOLON

    _ID  shift, and go to state 55

    id_list  go to state 56


State 26

   66 if_part: _IF . _LPAREN bool_exp _RPAREN statement

    _LPAREN  shift, and go to state 57


State 27

   68 return_statement: _RETURN . num_exp _SEMICOLON
   69                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 34
    _SEMICOLON    shift, and go to state 59
    _INCOP        shift, and go to state 37

    num_exp        go to state 60
    inc_exp        go to state 47
    exp            go to state 61
    literal        go to state 49
    function_call  go to state 50


State 28

   33 para_statement: _PARA . _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    _ID  shift, and go to state 62


State 29

   30 branch_statement: _BRANCH . _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _LSQRBRACKET  shift, and go to state 63


State 30

   39 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   40                     | _ID . _ASSIGN bool_exp _SEMICOLON
   48 inc_exp: _ID . _INCOP
   52 exp: _ID .
   58 function_call: _ID . $@8 _LPAREN real_arg_list _RPAREN

    _ASSIGN  shift, and go to state 64
    _INCOP   shift, and go to state 65

    _LPAREN   reduce using rule 57 ($@8)
    $default  reduce using rule 52 (exp)

    $@8  go to state 66


State 31

   55 literal: _INT_NUMBER .

    $default  reduce using rule 55 (literal)


State 32

   56 literal: _UINT_NUMBER .

    $default  reduce using rule 56 (literal)


State 33

   43 basic_bool: _BOOL_VALUE .

    $default  reduce using rule 43 (basic_bool)


State 34

   54 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 67
    inc_exp        go to state 47
    exp            go to state 61
    literal        go to state 49
    function_call  go to state 50


State 35

   38 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 20 (statement_list)

    statement_list  go to state 68


State 36

   13 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 13 (body)


State 37

   49 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 69


State 38

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 39

   27 statement: branch_statement .

    $default  reduce using rule 27 (statement)


State 40

   26 statement: para_statement .

    $default  reduce using rule 26 (statement)


State 41

   25 statement: exp_statement .

    $default  reduce using rule 25 (statement)


State 42

   22 statement: compound_statement .

    $default  reduce using rule 22 (statement)


State 43

   23 statement: assignment_statement .

    $default  reduce using rule 23 (statement)


State 44

   36 exp_statement: num_exp . _SEMICOLON
   42 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 70
    _AROP       shift, and go to state 71
    _RELOP      shift, and go to state 72


State 45

   46 bool_exp: basic_bool .

    $default  reduce using rule 46 (bool_exp)


State 46

   37 exp_statement: bool_exp . _SEMICOLON
   47 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 73
    _BOOLOP     shift, and go to state 74


State 47

   51 exp: inc_exp .

    $default  reduce using rule 51 (exp)


State 48

   41 num_exp: exp .
   45 basic_bool: exp . _BOOLOP basic_bool

    _BOOLOP  shift, and go to state 75

    $default  reduce using rule 41 (num_exp)


State 49

   50 exp: literal .

    $default  reduce using rule 50 (exp)


State 50

   53 exp: function_call .

    $default  reduce using rule 53 (exp)


State 51

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 52

   64 if_statement: if_part .
   65             | if_part . _ELSE statement

    _ELSE  shift, and go to state 76

    $default  reduce using rule 64 (if_statement)


State 53

   44 basic_bool: rel_exp .

    $default  reduce using rule 44 (basic_bool)


State 54

   12 body: _LBRACKET variable_list statement_list return_statement . _RBRACKET

    _RBRACKET  shift, and go to state 77


State 55

   18 id_list: _ID .

    $default  reduce using rule 18 (id_list)


State 56

   17 variable: _TYPE $@3 id_list . _SEMICOLON
   19 id_list: id_list . _COMMA _ID

    _SEMICOLON  shift, and go to state 78
    _COMMA      shift, and go to state 79


State 57

   66 if_part: _IF _LPAREN . bool_exp _RPAREN statement

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 80
    basic_bool     go to state 45
    bool_exp       go to state 81
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 53


State 58

   48 inc_exp: _ID . _INCOP
   52 exp: _ID .
   58 function_call: _ID . $@8 _LPAREN real_arg_list _RPAREN

    _INCOP  shift, and go to state 65

    _LPAREN   reduce using rule 57 ($@8)
    $default  reduce using rule 52 (exp)

    $@8  go to state 66


State 59

   69 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 69 (return_statement)


State 60

   42 num_exp: num_exp . _AROP exp
   68 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 82
    _AROP       shift, and go to state 71


State 61

   41 num_exp: exp .

    $default  reduce using rule 41 (num_exp)


State 62

   33 para_statement: _PARA _ID . $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    $default  reduce using rule 31 ($@6)

    $@6  go to state 83


State 63

   30 branch_statement: _BRANCH _LSQRBRACKET . _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _ID  shift, and go to state 84


State 64

   39 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   40                     | _ID _ASSIGN . bool_exp _SEMICOLON

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 85
    basic_bool     go to state 45
    bool_exp       go to state 86
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 53


State 65

   48 inc_exp: _ID _INCOP .

    $default  reduce using rule 48 (inc_exp)


State 66

   58 function_call: _ID $@8 . _LPAREN real_arg_list _RPAREN

    _LPAREN  shift, and go to state 87


State 67

   42 num_exp: num_exp . _AROP exp
   54 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 88
    _AROP    shift, and go to state 71


State 68

   21 statement_list: statement_list . statement
   38 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _RBRACKET     shift, and go to state 89
    _INCOP        shift, and go to state 37

    statement             go to state 38
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 69

   49 inc_exp: _INCOP _ID .

    $default  reduce using rule 49 (inc_exp)


State 70

   36 exp_statement: num_exp _SEMICOLON .

    $default  reduce using rule 36 (exp_statement)


State 71

   42 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    inc_exp        go to state 47
    exp            go to state 90
    literal        go to state 49
    function_call  go to state 50


State 72

   67 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 91
    inc_exp        go to state 47
    exp            go to state 61
    literal        go to state 49
    function_call  go to state 50


State 73

   37 exp_statement: bool_exp _SEMICOLON .

    $default  reduce using rule 37 (exp_statement)


State 74

   47 bool_exp: bool_exp _BOOLOP . basic_bool

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 80
    basic_bool     go to state 92
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 53


State 75

   45 basic_bool: exp _BOOLOP . basic_bool

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 80
    basic_bool     go to state 93
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 53


State 76

   65 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 94
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 77

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET .

    $default  reduce using rule 12 (body)


State 78

   17 variable: _TYPE $@3 id_list _SEMICOLON .

    $default  reduce using rule 17 (variable)


State 79

   19 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 95


State 80

   42 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 71
    _RELOP  shift, and go to state 72


State 81

   47 bool_exp: bool_exp . _BOOLOP basic_bool
   66 if_part: _IF _LPAREN bool_exp . _RPAREN statement

    _RPAREN  shift, and go to state 96
    _BOOLOP  shift, and go to state 74


State 82

   68 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 68 (return_statement)


State 83

   33 para_statement: _PARA _ID $@6 . _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    _EN  shift, and go to state 97


State 84

   30 branch_statement: _BRANCH _LSQRBRACKET _ID . $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 28 ($@4)

    $@4  go to state 98


State 85

   39 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   42 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 99
    _AROP       shift, and go to state 71
    _RELOP      shift, and go to state 72


State 86

   40 assignment_statement: _ID _ASSIGN bool_exp . _SEMICOLON
   47 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 100
    _BOOLOP     shift, and go to state 74


State 87

   58 function_call: _ID $@8 _LPAREN . real_arg_list _RPAREN

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    $default  reduce using rule 59 (real_arg_list)

    num_exp        go to state 101
    inc_exp        go to state 47
    exp            go to state 61
    literal        go to state 49
    function_call  go to state 50
    real_arg_list  go to state 102
    argument_list  go to state 103
    argument       go to state 104


State 88

   54 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 54 (exp)


State 89

   38 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 38 (compound_statement)


State 90

   42 num_exp: num_exp _AROP exp .

    $default  reduce using rule 42 (num_exp)


State 91

   42 num_exp: num_exp . _AROP exp
   67 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 71

    $default  reduce using rule 67 (rel_exp)


State 92

   47 bool_exp: bool_exp _BOOLOP basic_bool .

    $default  reduce using rule 47 (bool_exp)


State 93

   45 basic_bool: exp _BOOLOP basic_bool .

    $default  reduce using rule 45 (basic_bool)


State 94

   65 if_statement: if_part _ELSE statement .

    $default  reduce using rule 65 (if_statement)


State 95

   19 id_list: id_list _COMMA _ID .

    $default  reduce using rule 19 (id_list)


State 96

   66 if_part: _IF _LPAREN bool_exp _RPAREN . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 105
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 97

   33 para_statement: _PARA _ID $@6 _EN . _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    _LPAREN  shift, and go to state 106


State 98

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 . _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 107


State 99

   39 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 39 (assignment_statement)


State 100

   40 assignment_statement: _ID _ASSIGN bool_exp _SEMICOLON .

    $default  reduce using rule 40 (assignment_statement)


State 101

   42 num_exp: num_exp . _AROP exp
   63 argument: num_exp .

    _AROP  shift, and go to state 71

    $default  reduce using rule 63 (argument)


State 102

   58 function_call: _ID $@8 _LPAREN real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 108


State 103

   60 real_arg_list: argument_list .
   62 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 109

    $default  reduce using rule 60 (real_arg_list)


State 104

   61 argument_list: argument .

    $default  reduce using rule 61 (argument_list)


State 105

   66 if_part: _IF _LPAREN bool_exp _RPAREN statement .

    $default  reduce using rule 66 (if_part)


State 106

   33 para_statement: _PARA _ID $@6 _EN _LPAREN . literal _DDOT literal paso_part $@7 _RPAREN statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 110


State 107

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW . literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 111


State 108

   58 function_call: _ID $@8 _LPAREN real_arg_list _RPAREN .

    $default  reduce using rule 58 (function_call)


State 109

   62 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 58
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 34
    _INCOP        shift, and go to state 37

    num_exp        go to state 101
    inc_exp        go to state 47
    exp            go to state 61
    literal        go to state 49
    function_call  go to state 50
    argument       go to state 112


State 110

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal . _DDOT literal paso_part $@7 _RPAREN statement

    _DDOT  shift, and go to state 113


State 111

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal . _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 114


State 112

   62 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 62 (argument_list)


State 113

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT . literal paso_part $@7 _RPAREN statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 115


State 114

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW . literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 116


State 115

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal . paso_part $@7 _RPAREN statement

    _PASO  shift, and go to state 117

    $default  reduce using rule 34 (paso_part)

    paso_part  go to state 118


State 116

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal . _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 119


State 117

   35 paso_part: _PASO . literal

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 120


State 118

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part . $@7 _RPAREN statement

    $default  reduce using rule 32 ($@7)

    $@7  go to state 121


State 119

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW . literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 122


State 120

   35 paso_part: _PASO literal .

    $default  reduce using rule 35 (paso_part)


State 121

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 123


State 122

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal . _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RSQRBRACKET  shift, and go to state 124


State 123

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 125
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 124

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET . $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 29 ($@5)

    $@5  go to state 126


State 125

   33 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement .

    $default  reduce using rule 33 (para_statement)


State 126

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 . _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _FIRST  shift, and go to state 127


State 127

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST . statement _SECOND statement _THIRD statement _OTHERWISE statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 128
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 128

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement . _SECOND statement _THIRD statement _OTHERWISE statement

    _SECOND  shift, and go to state 129


State 129

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND . statement _THIRD statement _OTHERWISE statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 130
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 130

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement . _THIRD statement _OTHERWISE statement

    _THIRD  shift, and go to state 131


State 131

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD . statement _OTHERWISE statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 132
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 132

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement . _OTHERWISE statement

    _OTHERWISE  shift, and go to state 133


State 133

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 37

    statement             go to state 134
    branch_statement      go to state 39
    para_statement        go to state 40
    exp_statement         go to state 41
    compound_statement    go to state 42
    assignment_statement  go to state 43
    num_exp               go to state 44
    basic_bool            go to state 45
    bool_exp              go to state 46
    inc_exp               go to state 47
    exp                   go to state 48
    literal               go to state 49
    function_call         go to state 50
    if_statement          go to state 51
    if_part               go to state 52
    rel_exp               go to state 53


State 134

   30 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement .

    $default  reduce using rule 30 (branch_statement)
