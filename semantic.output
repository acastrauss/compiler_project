Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    7 real_param_list: %empty
    8                | parameter_list

    9 parameter_list: parameter
   10               | parameter_list _COMMA parameter

   11 parameter: _TYPE _ID

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list _RBRACKET

   14 variable_list: %empty
   15              | variable_list variable

   16 $@3: %empty

   17 variable: _TYPE $@3 id_list _SEMICOLON

   18 id_list: _ID
   19        | id_list _COMMA _ID

   20 statement_list: %empty
   21               | statement_list statement

   22 statement: compound_statement
   23          | assignment_statement
   24          | if_statement
   25          | exp_statement
   26          | para_statement

   27 $@4: %empty

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal _DDOT literal paso_part _RPAREN statement

   29 paso_part: %empty
   30          | _PASO literal

   31 exp_statement: num_exp _SEMICOLON
   32              | bool_exp _SEMICOLON

   33 compound_statement: _LBRACKET statement_list _RBRACKET

   34 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   35                     | _ID _ASSIGN bool_exp _SEMICOLON

   36 num_exp: exp
   37        | num_exp _AROP exp

   38 basic_bool: _BOOL_VALUE
   39           | rel_exp
   40           | exp _BOOLOP basic_bool

   41 bool_exp: basic_bool
   42         | bool_exp _BOOLOP basic_bool

   43 inc_exp: _ID _INCOP
   44        | _INCOP _ID

   45 exp: literal
   46    | inc_exp
   47    | _ID
   48    | function_call
   49    | _LPAREN num_exp _RPAREN

   50 literal: _INT_NUMBER
   51        | _UINT_NUMBER

   52 $@5: %empty

   53 function_call: _ID $@5 _LPAREN real_arg_list _RPAREN

   54 real_arg_list: %empty
   55              | argument_list

   56 argument_list: argument
   57              | argument_list _COMMA argument

   58 argument: num_exp

   59 if_statement: if_part
   60             | if_part _ELSE statement

   61 if_part: _IF _LPAREN bool_exp _RPAREN statement

   62 rel_exp: num_exp _RELOP num_exp

   63 return_statement: _RETURN num_exp _SEMICOLON
   64                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 11 17
    _IF (259) 61
    _ELSE (260) 60
    _RETURN (261) 63 64
    _PARA <s> (262) 28
    _EN (263) 28
    _DDOT (264) 28
    _PASO (265) 30
    _ID <s> (266) 6 11 18 19 28 34 35 43 44 47 53
    _INT_NUMBER <s> (267) 50
    _UINT_NUMBER <s> (268) 51
    _BOOL_VALUE <s> (269) 38
    _LPAREN (270) 6 28 49 53 61
    _RPAREN (271) 6 28 49 53 61
    _LBRACKET (272) 12 13 33
    _RBRACKET (273) 12 13 33
    _ASSIGN (274) 34 35
    _SEMICOLON (275) 17 31 32 34 35 63 64
    _COMMA (276) 10 19 57
    _AROP <i> (277) 37
    _RELOP <i> (278) 62
    _INCOP <i> (279) 43 44
    _BOOLOP <i> (280) 40 42
    ONLY_IF (281)


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    program (28)
        on left: 1
        on right: 0
    function_list (29)
        on left: 2 3
        on right: 1 3
    function (30)
        on left: 6
        on right: 2 3
    $@1 (31)
        on left: 4
        on right: 6
    $@2 (32)
        on left: 5
        on right: 6
    real_param_list (33)
        on left: 7 8
        on right: 6
    parameter_list (34)
        on left: 9 10
        on right: 8 10
    parameter (35)
        on left: 11
        on right: 9 10
    body (36)
        on left: 12 13
        on right: 6
    variable_list (37)
        on left: 14 15
        on right: 12 13 15
    variable (38)
        on left: 17
        on right: 15
    $@3 (39)
        on left: 16
        on right: 17
    id_list (40)
        on left: 18 19
        on right: 17 19
    statement_list (41)
        on left: 20 21
        on right: 12 13 21 33
    statement (42)
        on left: 22 23 24 25 26
        on right: 21 28 60 61
    para_statement <i> (43)
        on left: 28
        on right: 26
    $@4 (44)
        on left: 27
        on right: 28
    paso_part <i> (45)
        on left: 29 30
        on right: 28
    exp_statement (46)
        on left: 31 32
        on right: 25
    compound_statement (47)
        on left: 33
        on right: 22
    assignment_statement (48)
        on left: 34 35
        on right: 23
    num_exp <i> (49)
        on left: 36 37
        on right: 31 34 37 49 58 62 63
    basic_bool <i> (50)
        on left: 38 39 40
        on right: 40 41 42
    bool_exp <i> (51)
        on left: 41 42
        on right: 32 35 42 61
    inc_exp <i> (52)
        on left: 43 44
        on right: 46
    exp <i> (53)
        on left: 45 46 47 48 49
        on right: 36 37 40
    literal <i> (54)
        on left: 50 51
        on right: 28 30 45
    function_call <i> (55)
        on left: 53
        on right: 48
    $@5 (56)
        on left: 52
        on right: 53
    real_arg_list <i> (57)
        on left: 54 55
        on right: 53
    argument_list <i> (58)
        on left: 56 57
        on right: 55 57
    argument <i> (59)
        on left: 58
        on right: 56 57
    if_statement (60)
        on left: 59 60
        on right: 24
    if_part (61)
        on left: 61
        on right: 59 60
    rel_exp <i> (62)
        on left: 62
        on right: 39
    return_statement (63)
        on left: 63 64
        on right: 12


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN real_param_list $@2 _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN real_param_list $@2 _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . real_param_list $@2 _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (real_param_list)

    real_param_list  go to state 11
    parameter_list   go to state 12
    parameter        go to state 13


State 10

   11 parameter: _TYPE . _ID

    _ID  shift, and go to state 14


State 11

    6 function: _TYPE _ID $@1 _LPAREN real_param_list . $@2 _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 12

    8 real_param_list: parameter_list .
   10 parameter_list: parameter_list . _COMMA parameter

    _COMMA  shift, and go to state 16

    $default  reduce using rule 8 (real_param_list)


State 13

    9 parameter_list: parameter .

    $default  reduce using rule 9 (parameter_list)


State 14

   11 parameter: _TYPE _ID .

    $default  reduce using rule 11 (parameter)


State 15

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 . _RPAREN body

    _RPAREN  shift, and go to state 17


State 16

   10 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 10

    parameter  go to state 18


State 17

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 18

   10 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 10 (parameter_list)


State 19

   12 body: _LBRACKET . variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 14 (variable_list)

    variable_list  go to state 21


State 20

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body .

    $default  reduce using rule 6 (function)


State 21

   12 body: _LBRACKET variable_list . statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list . statement_list _RBRACKET
   15 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 20 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   17 variable: _TYPE . $@3 id_list _SEMICOLON

    $default  reduce using rule 16 ($@3)

    $@3  go to state 25


State 23

   15 variable_list: variable_list variable .

    $default  reduce using rule 15 (variable_list)


State 24

   12 body: _LBRACKET variable_list statement_list . return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list . _RBRACKET
   21 statement_list: statement_list . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _ID           shift, and go to state 29
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _LBRACKET     shift, and go to state 34
    _RBRACKET     shift, and go to state 35
    _INCOP        shift, and go to state 36

    statement             go to state 37
    para_statement        go to state 38
    exp_statement         go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    num_exp               go to state 42
    basic_bool            go to state 43
    bool_exp              go to state 44
    inc_exp               go to state 45
    exp                   go to state 46
    literal               go to state 47
    function_call         go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    rel_exp               go to state 51
    return_statement      go to state 52


State 25

   17 variable: _TYPE $@3 . id_list _SEMICOLON

    _ID  shift, and go to state 53

    id_list  go to state 54


State 26

   61 if_part: _IF . _LPAREN bool_exp _RPAREN statement

    _LPAREN  shift, and go to state 55


State 27

   63 return_statement: _RETURN . num_exp _SEMICOLON
   64                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _LPAREN       shift, and go to state 33
    _SEMICOLON    shift, and go to state 57
    _INCOP        shift, and go to state 36

    num_exp        go to state 58
    inc_exp        go to state 45
    exp            go to state 59
    literal        go to state 47
    function_call  go to state 48


State 28

   28 para_statement: _PARA . _ID $@4 _EN _LPAREN literal _DDOT literal paso_part _RPAREN statement

    _ID  shift, and go to state 60


State 29

   34 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   35                     | _ID . _ASSIGN bool_exp _SEMICOLON
   43 inc_exp: _ID . _INCOP
   47 exp: _ID .
   53 function_call: _ID . $@5 _LPAREN real_arg_list _RPAREN

    _ASSIGN  shift, and go to state 61
    _INCOP   shift, and go to state 62

    _LPAREN   reduce using rule 52 ($@5)
    $default  reduce using rule 47 (exp)

    $@5  go to state 63


State 30

   50 literal: _INT_NUMBER .

    $default  reduce using rule 50 (literal)


State 31

   51 literal: _UINT_NUMBER .

    $default  reduce using rule 51 (literal)


State 32

   38 basic_bool: _BOOL_VALUE .

    $default  reduce using rule 38 (basic_bool)


State 33

   49 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 64
    inc_exp        go to state 45
    exp            go to state 59
    literal        go to state 47
    function_call  go to state 48


State 34

   33 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 20 (statement_list)

    statement_list  go to state 65


State 35

   13 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 13 (body)


State 36

   44 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 66


State 37

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 38

   26 statement: para_statement .

    $default  reduce using rule 26 (statement)


State 39

   25 statement: exp_statement .

    $default  reduce using rule 25 (statement)


State 40

   22 statement: compound_statement .

    $default  reduce using rule 22 (statement)


State 41

   23 statement: assignment_statement .

    $default  reduce using rule 23 (statement)


State 42

   31 exp_statement: num_exp . _SEMICOLON
   37 num_exp: num_exp . _AROP exp
   62 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 68
    _RELOP      shift, and go to state 69


State 43

   41 bool_exp: basic_bool .

    $default  reduce using rule 41 (bool_exp)


State 44

   32 exp_statement: bool_exp . _SEMICOLON
   42 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 70
    _BOOLOP     shift, and go to state 71


State 45

   46 exp: inc_exp .

    $default  reduce using rule 46 (exp)


State 46

   36 num_exp: exp .
   40 basic_bool: exp . _BOOLOP basic_bool

    _BOOLOP  shift, and go to state 72

    $default  reduce using rule 36 (num_exp)


State 47

   45 exp: literal .

    $default  reduce using rule 45 (exp)


State 48

   48 exp: function_call .

    $default  reduce using rule 48 (exp)


State 49

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 50

   59 if_statement: if_part .
   60             | if_part . _ELSE statement

    _ELSE  shift, and go to state 73

    $default  reduce using rule 59 (if_statement)


State 51

   39 basic_bool: rel_exp .

    $default  reduce using rule 39 (basic_bool)


State 52

   12 body: _LBRACKET variable_list statement_list return_statement . _RBRACKET

    _RBRACKET  shift, and go to state 74


State 53

   18 id_list: _ID .

    $default  reduce using rule 18 (id_list)


State 54

   17 variable: _TYPE $@3 id_list . _SEMICOLON
   19 id_list: id_list . _COMMA _ID

    _SEMICOLON  shift, and go to state 75
    _COMMA      shift, and go to state 76


State 55

   61 if_part: _IF _LPAREN . bool_exp _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 77
    basic_bool     go to state 43
    bool_exp       go to state 78
    inc_exp        go to state 45
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 51


State 56

   43 inc_exp: _ID . _INCOP
   47 exp: _ID .
   53 function_call: _ID . $@5 _LPAREN real_arg_list _RPAREN

    _INCOP  shift, and go to state 62

    _LPAREN   reduce using rule 52 ($@5)
    $default  reduce using rule 47 (exp)

    $@5  go to state 63


State 57

   64 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 64 (return_statement)


State 58

   37 num_exp: num_exp . _AROP exp
   63 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 79
    _AROP       shift, and go to state 68


State 59

   36 num_exp: exp .

    $default  reduce using rule 36 (num_exp)


State 60

   28 para_statement: _PARA _ID . $@4 _EN _LPAREN literal _DDOT literal paso_part _RPAREN statement

    $default  reduce using rule 27 ($@4)

    $@4  go to state 80


State 61

   34 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   35                     | _ID _ASSIGN . bool_exp _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 81
    basic_bool     go to state 43
    bool_exp       go to state 82
    inc_exp        go to state 45
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 51


State 62

   43 inc_exp: _ID _INCOP .

    $default  reduce using rule 43 (inc_exp)


State 63

   53 function_call: _ID $@5 . _LPAREN real_arg_list _RPAREN

    _LPAREN  shift, and go to state 83


State 64

   37 num_exp: num_exp . _AROP exp
   49 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 84
    _AROP    shift, and go to state 68


State 65

   21 statement_list: statement_list . statement
   33 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _ID           shift, and go to state 29
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _LBRACKET     shift, and go to state 34
    _RBRACKET     shift, and go to state 85
    _INCOP        shift, and go to state 36

    statement             go to state 37
    para_statement        go to state 38
    exp_statement         go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    num_exp               go to state 42
    basic_bool            go to state 43
    bool_exp              go to state 44
    inc_exp               go to state 45
    exp                   go to state 46
    literal               go to state 47
    function_call         go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    rel_exp               go to state 51


State 66

   44 inc_exp: _INCOP _ID .

    $default  reduce using rule 44 (inc_exp)


State 67

   31 exp_statement: num_exp _SEMICOLON .

    $default  reduce using rule 31 (exp_statement)


State 68

   37 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    inc_exp        go to state 45
    exp            go to state 86
    literal        go to state 47
    function_call  go to state 48


State 69

   62 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 87
    inc_exp        go to state 45
    exp            go to state 59
    literal        go to state 47
    function_call  go to state 48


State 70

   32 exp_statement: bool_exp _SEMICOLON .

    $default  reduce using rule 32 (exp_statement)


State 71

   42 bool_exp: bool_exp _BOOLOP . basic_bool

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 77
    basic_bool     go to state 88
    inc_exp        go to state 45
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 51


State 72

   40 basic_bool: exp _BOOLOP . basic_bool

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 77
    basic_bool     go to state 89
    inc_exp        go to state 45
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 51


State 73

   60 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _ID           shift, and go to state 29
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _LBRACKET     shift, and go to state 34
    _INCOP        shift, and go to state 36

    statement             go to state 90
    para_statement        go to state 38
    exp_statement         go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    num_exp               go to state 42
    basic_bool            go to state 43
    bool_exp              go to state 44
    inc_exp               go to state 45
    exp                   go to state 46
    literal               go to state 47
    function_call         go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    rel_exp               go to state 51


State 74

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET .

    $default  reduce using rule 12 (body)


State 75

   17 variable: _TYPE $@3 id_list _SEMICOLON .

    $default  reduce using rule 17 (variable)


State 76

   19 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 91


State 77

   37 num_exp: num_exp . _AROP exp
   62 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 68
    _RELOP  shift, and go to state 69


State 78

   42 bool_exp: bool_exp . _BOOLOP basic_bool
   61 if_part: _IF _LPAREN bool_exp . _RPAREN statement

    _RPAREN  shift, and go to state 92
    _BOOLOP  shift, and go to state 71


State 79

   63 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 63 (return_statement)


State 80

   28 para_statement: _PARA _ID $@4 . _EN _LPAREN literal _DDOT literal paso_part _RPAREN statement

    _EN  shift, and go to state 93


State 81

   34 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   37 num_exp: num_exp . _AROP exp
   62 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 94
    _AROP       shift, and go to state 68
    _RELOP      shift, and go to state 69


State 82

   35 assignment_statement: _ID _ASSIGN bool_exp . _SEMICOLON
   42 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 95
    _BOOLOP     shift, and go to state 71


State 83

   53 function_call: _ID $@5 _LPAREN . real_arg_list _RPAREN

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    $default  reduce using rule 54 (real_arg_list)

    num_exp        go to state 96
    inc_exp        go to state 45
    exp            go to state 59
    literal        go to state 47
    function_call  go to state 48
    real_arg_list  go to state 97
    argument_list  go to state 98
    argument       go to state 99


State 84

   49 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 49 (exp)


State 85

   33 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 33 (compound_statement)


State 86

   37 num_exp: num_exp _AROP exp .

    $default  reduce using rule 37 (num_exp)


State 87

   37 num_exp: num_exp . _AROP exp
   62 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 68

    $default  reduce using rule 62 (rel_exp)


State 88

   42 bool_exp: bool_exp _BOOLOP basic_bool .

    $default  reduce using rule 42 (bool_exp)


State 89

   40 basic_bool: exp _BOOLOP basic_bool .

    $default  reduce using rule 40 (basic_bool)


State 90

   60 if_statement: if_part _ELSE statement .

    $default  reduce using rule 60 (if_statement)


State 91

   19 id_list: id_list _COMMA _ID .

    $default  reduce using rule 19 (id_list)


State 92

   61 if_part: _IF _LPAREN bool_exp _RPAREN . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _ID           shift, and go to state 29
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _LBRACKET     shift, and go to state 34
    _INCOP        shift, and go to state 36

    statement             go to state 100
    para_statement        go to state 38
    exp_statement         go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    num_exp               go to state 42
    basic_bool            go to state 43
    bool_exp              go to state 44
    inc_exp               go to state 45
    exp                   go to state 46
    literal               go to state 47
    function_call         go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    rel_exp               go to state 51


State 93

   28 para_statement: _PARA _ID $@4 _EN . _LPAREN literal _DDOT literal paso_part _RPAREN statement

    _LPAREN  shift, and go to state 101


State 94

   34 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 34 (assignment_statement)


State 95

   35 assignment_statement: _ID _ASSIGN bool_exp _SEMICOLON .

    $default  reduce using rule 35 (assignment_statement)


State 96

   37 num_exp: num_exp . _AROP exp
   58 argument: num_exp .

    _AROP  shift, and go to state 68

    $default  reduce using rule 58 (argument)


State 97

   53 function_call: _ID $@5 _LPAREN real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 102


State 98

   55 real_arg_list: argument_list .
   57 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 103

    $default  reduce using rule 55 (real_arg_list)


State 99

   56 argument_list: argument .

    $default  reduce using rule 56 (argument_list)


State 100

   61 if_part: _IF _LPAREN bool_exp _RPAREN statement .

    $default  reduce using rule 61 (if_part)


State 101

   28 para_statement: _PARA _ID $@4 _EN _LPAREN . literal _DDOT literal paso_part _RPAREN statement

    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31

    literal  go to state 104


State 102

   53 function_call: _ID $@5 _LPAREN real_arg_list _RPAREN .

    $default  reduce using rule 53 (function_call)


State 103

   57 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _LPAREN       shift, and go to state 33
    _INCOP        shift, and go to state 36

    num_exp        go to state 96
    inc_exp        go to state 45
    exp            go to state 59
    literal        go to state 47
    function_call  go to state 48
    argument       go to state 105


State 104

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal . _DDOT literal paso_part _RPAREN statement

    _DDOT  shift, and go to state 106


State 105

   57 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 57 (argument_list)


State 106

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal _DDOT . literal paso_part _RPAREN statement

    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31

    literal  go to state 107


State 107

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal _DDOT literal . paso_part _RPAREN statement

    _PASO  shift, and go to state 108

    $default  reduce using rule 29 (paso_part)

    paso_part  go to state 109


State 108

   30 paso_part: _PASO . literal

    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31

    literal  go to state 110


State 109

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal _DDOT literal paso_part . _RPAREN statement

    _RPAREN  shift, and go to state 111


State 110

   30 paso_part: _PASO literal .

    $default  reduce using rule 30 (paso_part)


State 111

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal _DDOT literal paso_part _RPAREN . statement

    _IF           shift, and go to state 26
    _PARA         shift, and go to state 28
    _ID           shift, and go to state 29
    _INT_NUMBER   shift, and go to state 30
    _UINT_NUMBER  shift, and go to state 31
    _BOOL_VALUE   shift, and go to state 32
    _LPAREN       shift, and go to state 33
    _LBRACKET     shift, and go to state 34
    _INCOP        shift, and go to state 36

    statement             go to state 112
    para_statement        go to state 38
    exp_statement         go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    num_exp               go to state 42
    basic_bool            go to state 43
    bool_exp              go to state 44
    inc_exp               go to state 45
    exp                   go to state 46
    literal               go to state 47
    function_call         go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    rel_exp               go to state 51


State 112

   28 para_statement: _PARA _ID $@4 _EN _LPAREN literal _DDOT literal paso_part _RPAREN statement .

    $default  reduce using rule 28 (para_statement)
