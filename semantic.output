Grammar

    0 $accept: program $end

    1 program: global_varlist function_list

    2 global_varlist: %empty
    3               | global_varlist global_var

    4 $@1: %empty

    5 global_var: _TYPE _ID $@1 opt_assign

    6 function_list: function
    7              | function_list function

    8 $@2: %empty

    9 $@3: %empty

   10 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 _RPAREN body

   11 real_param_list: %empty
   12                | parameter_list

   13 parameter_list: parameter
   14               | parameter_list _COMMA parameter

   15 parameter: _TYPE _ID

   16 body: _LBRACKET variable_list statement_list _RBRACKET

   17 variable_list: %empty
   18              | variable_list variable

   19 $@4: %empty

   20 variable: _TYPE $@4 id_list opt_assign

   21 opt_assign: _SEMICOLON
   22           | _ASSIGN exp_statement

   23 id_list: _ID
   24        | id_list _COMMA _ID

   25 statement_list: %empty
   26               | statement_list statement

   27 statement: compound_statement
   28          | assignment_statement
   29          | if_statement
   30          | exp_statement
   31          | para_statement
   32          | branch_statement
   33          | return_statement

   34 $@5: %empty

   35 $@6: %empty

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

   37 $@7: %empty

   38 $@8: %empty

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT literal paso_part $@8 _RPAREN statement

   40 paso_part: %empty
   41          | _PASO literal

   42 exp_statement: num_exp _SEMICOLON
   43              | bool_exp _SEMICOLON
   44              | conditional_exp _SEMICOLON

   45 compound_statement: _LBRACKET statement_list _RBRACKET

   46 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   47                     | _ID _ASSIGN bool_exp _SEMICOLON

   48 num_exp: exp
   49        | num_exp _AROP exp

   50 basic_bool: _BOOL_VALUE
   51           | rel_exp
   52           | exp _BOOLOP basic_bool
   53           | _NOT _LPAREN basic_bool _RPAREN
   54           | _NOT _LPAREN exp _RPAREN
   55           | _LPAREN bool_exp _RPAREN

   56 bool_exp: basic_bool
   57         | bool_exp _BOOLOP basic_bool

   58 inc_exp: _ID _INCOP
   59        | _INCOP _ID

   60 exp: literal
   61    | inc_exp
   62    | _ID
   63    | function_call
   64    | _LPAREN num_exp _RPAREN
   65    | _LPAREN conditional_exp _RPAREN

   66 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK exp_c _DOUBLEDOT exp_c

   67 exp_c: num_exp
   68      | bool_exp

   69 literal: _INT_NUMBER
   70        | _UINT_NUMBER

   71 $@9: %empty

   72 function_call: _ID $@9 _LPAREN real_arg_list _RPAREN

   73 real_arg_list: %empty
   74              | argument_list

   75 argument_list: argument
   76              | argument_list _COMMA argument

   77 argument: num_exp
   78         | bool_exp

   79 if_statement: if_part
   80             | if_part _ELSE statement

   81 if_part: _IF _LPAREN bool_exp _RPAREN statement

   82 rel_exp: num_exp _RELOP num_exp

   83 return_statement: _RETURN num_exp _SEMICOLON
   84                 | _RETURN bool_exp _SEMICOLON
   85                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 10 15 20
    _IF (259) 81
    _ELSE (260) 80
    _RETURN (261) 83 84 85
    _PARA <s> (262) 39
    _EN (263) 39
    _DDOT (264) 39
    _PASO (265) 41
    _BRANCH (266) 36
    _FIRST (267) 36
    _SECOND (268) 36
    _THIRD (269) 36
    _OTHERWISE (270) 36
    _ID <s> (271) 5 10 15 23 24 36 39 46 47 58 59 62 72
    _INT_NUMBER <s> (272) 69
    _UINT_NUMBER <s> (273) 70
    _BOOL_VALUE <s> (274) 50
    _LPAREN (275) 10 39 53 54 55 64 65 66 72 81
    _RPAREN (276) 10 39 53 54 55 64 65 66 72 81
    _LBRACKET (277) 16 45
    _RBRACKET (278) 16 45
    _LSQRBRACKET (279) 36
    _RSQRBRACKET (280) 36
    _ASSIGN (281) 22 46 47
    _SEMICOLON (282) 21 42 43 44 46 47 83 84 85
    _COMMA (283) 14 24 76
    _RARROW (284) 36
    _QMARK (285) 66
    _DOUBLEDOT (286) 66
    _NOT (287) 53 54
    _AROP <i> (288) 49
    _RELOP <i> (289) 82
    _INCOP <i> (290) 58 59
    _BOOLOP <i> (291) 52 57
    ONLY_IF (292)


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program (39)
        on left: 1
        on right: 0
    global_varlist (40)
        on left: 2 3
        on right: 1 3
    global_var (41)
        on left: 5
        on right: 3
    $@1 (42)
        on left: 4
        on right: 5
    function_list (43)
        on left: 6 7
        on right: 1 7
    function (44)
        on left: 10
        on right: 6 7
    $@2 (45)
        on left: 8
        on right: 10
    $@3 (46)
        on left: 9
        on right: 10
    real_param_list (47)
        on left: 11 12
        on right: 10
    parameter_list (48)
        on left: 13 14
        on right: 12 14
    parameter (49)
        on left: 15
        on right: 13 14
    body (50)
        on left: 16
        on right: 10
    variable_list (51)
        on left: 17 18
        on right: 16 18
    variable (52)
        on left: 20
        on right: 18
    $@4 (53)
        on left: 19
        on right: 20
    opt_assign <i> (54)
        on left: 21 22
        on right: 5 20
    id_list (55)
        on left: 23 24
        on right: 20 24
    statement_list (56)
        on left: 25 26
        on right: 16 26 45
    statement (57)
        on left: 27 28 29 30 31 32 33
        on right: 26 36 39 80 81
    branch_statement (58)
        on left: 36
        on right: 32
    $@5 (59)
        on left: 34
        on right: 36
    $@6 (60)
        on left: 35
        on right: 36
    para_statement (61)
        on left: 39
        on right: 31
    $@7 (62)
        on left: 37
        on right: 39
    $@8 (63)
        on left: 38
        on right: 39
    paso_part <i> (64)
        on left: 40 41
        on right: 39
    exp_statement <i> (65)
        on left: 42 43 44
        on right: 22 30
    compound_statement (66)
        on left: 45
        on right: 27
    assignment_statement (67)
        on left: 46 47
        on right: 28
    num_exp <i> (68)
        on left: 48 49
        on right: 42 46 49 64 67 77 82 83
    basic_bool <i> (69)
        on left: 50 51 52 53 54 55
        on right: 52 53 56 57
    bool_exp <i> (70)
        on left: 56 57
        on right: 43 47 55 57 66 68 78 81 84
    inc_exp <i> (71)
        on left: 58 59
        on right: 61
    exp <i> (72)
        on left: 60 61 62 63 64 65
        on right: 48 49 52 54
    conditional_exp <i> (73)
        on left: 66
        on right: 44 65
    exp_c <i> (74)
        on left: 67 68
        on right: 66
    literal <i> (75)
        on left: 69 70
        on right: 36 39 41 60
    function_call <i> (76)
        on left: 72
        on right: 63
    $@9 (77)
        on left: 71
        on right: 72
    real_arg_list <i> (78)
        on left: 73 74
        on right: 72
    argument_list <i> (79)
        on left: 75 76
        on right: 74 76
    argument <i> (80)
        on left: 77 78
        on right: 75 76
    if_statement (81)
        on left: 79 80
        on right: 29
    if_part (82)
        on left: 81
        on right: 79 80
    rel_exp <i> (83)
        on left: 82
        on right: 51
    return_statement (84)
        on left: 83 84 85
        on right: 33


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_varlist)

    program         go to state 1
    global_varlist  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_varlist . function_list
    3 global_varlist: global_varlist . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 global_var: _TYPE . _ID $@1 opt_assign
   10 function: _TYPE . _ID $@2 _LPAREN real_param_list $@3 _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_varlist: global_varlist global_var .

    $default  reduce using rule 3 (global_varlist)


State 6

    1 program: global_varlist function_list .
    7 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    6 function_list: function .

    $default  reduce using rule 6 (function_list)


State 8

    5 global_var: _TYPE _ID . $@1 opt_assign
   10 function: _TYPE _ID . $@2 _LPAREN real_param_list $@3 _RPAREN body

    _LPAREN   reduce using rule 8 ($@2)
    $default  reduce using rule 4 ($@1)

    $@1  go to state 11
    $@2  go to state 12


State 9

   10 function: _TYPE . _ID $@2 _LPAREN real_param_list $@3 _RPAREN body

    _ID  shift, and go to state 13


State 10

    7 function_list: function_list function .

    $default  reduce using rule 7 (function_list)


State 11

    5 global_var: _TYPE _ID $@1 . opt_assign

    _ASSIGN     shift, and go to state 14
    _SEMICOLON  shift, and go to state 15

    opt_assign  go to state 16


State 12

   10 function: _TYPE _ID $@2 . _LPAREN real_param_list $@3 _RPAREN body

    _LPAREN  shift, and go to state 17


State 13

   10 function: _TYPE _ID . $@2 _LPAREN real_param_list $@3 _RPAREN body

    $default  reduce using rule 8 ($@2)

    $@2  go to state 12


State 14

   22 opt_assign: _ASSIGN . exp_statement

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    exp_statement    go to state 25
    num_exp          go to state 26
    basic_bool       go to state 27
    bool_exp         go to state 28
    inc_exp          go to state 29
    exp              go to state 30
    conditional_exp  go to state 31
    literal          go to state 32
    function_call    go to state 33
    rel_exp          go to state 34


State 15

   21 opt_assign: _SEMICOLON .

    $default  reduce using rule 21 (opt_assign)


State 16

    5 global_var: _TYPE _ID $@1 opt_assign .

    $default  reduce using rule 5 (global_var)


State 17

   10 function: _TYPE _ID $@2 _LPAREN . real_param_list $@3 _RPAREN body

    _TYPE  shift, and go to state 35

    $default  reduce using rule 11 (real_param_list)

    real_param_list  go to state 36
    parameter_list   go to state 37
    parameter        go to state 38


State 18

   58 inc_exp: _ID . _INCOP
   62 exp: _ID .
   72 function_call: _ID . $@9 _LPAREN real_arg_list _RPAREN

    _INCOP  shift, and go to state 39

    _LPAREN   reduce using rule 71 ($@9)
    $default  reduce using rule 62 (exp)

    $@9  go to state 40


State 19

   69 literal: _INT_NUMBER .

    $default  reduce using rule 69 (literal)


State 20

   70 literal: _UINT_NUMBER .

    $default  reduce using rule 70 (literal)


State 21

   50 basic_bool: _BOOL_VALUE .

    $default  reduce using rule 50 (basic_bool)


State 22

   55 basic_bool: _LPAREN . bool_exp _RPAREN
   64 exp: _LPAREN . num_exp _RPAREN
   65    | _LPAREN . conditional_exp _RPAREN
   66 conditional_exp: _LPAREN . bool_exp _RPAREN _QMARK exp_c _DOUBLEDOT exp_c

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp          go to state 41
    basic_bool       go to state 27
    bool_exp         go to state 42
    inc_exp          go to state 29
    exp              go to state 30
    conditional_exp  go to state 43
    literal          go to state 32
    function_call    go to state 33
    rel_exp          go to state 34


State 23

   53 basic_bool: _NOT . _LPAREN basic_bool _RPAREN
   54           | _NOT . _LPAREN exp _RPAREN

    _LPAREN  shift, and go to state 44


State 24

   59 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 45


State 25

   22 opt_assign: _ASSIGN exp_statement .

    $default  reduce using rule 22 (opt_assign)


State 26

   42 exp_statement: num_exp . _SEMICOLON
   49 num_exp: num_exp . _AROP exp
   82 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 46
    _AROP       shift, and go to state 47
    _RELOP      shift, and go to state 48


State 27

   56 bool_exp: basic_bool .

    $default  reduce using rule 56 (bool_exp)


State 28

   43 exp_statement: bool_exp . _SEMICOLON
   57 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 49
    _BOOLOP     shift, and go to state 50


State 29

   61 exp: inc_exp .

    $default  reduce using rule 61 (exp)


State 30

   48 num_exp: exp .
   52 basic_bool: exp . _BOOLOP basic_bool

    _BOOLOP  shift, and go to state 51

    $default  reduce using rule 48 (num_exp)


State 31

   44 exp_statement: conditional_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 52


State 32

   60 exp: literal .

    $default  reduce using rule 60 (exp)


State 33

   63 exp: function_call .

    $default  reduce using rule 63 (exp)


State 34

   51 basic_bool: rel_exp .

    $default  reduce using rule 51 (basic_bool)


State 35

   15 parameter: _TYPE . _ID

    _ID  shift, and go to state 53


State 36

   10 function: _TYPE _ID $@2 _LPAREN real_param_list . $@3 _RPAREN body

    $default  reduce using rule 9 ($@3)

    $@3  go to state 54


State 37

   12 real_param_list: parameter_list .
   14 parameter_list: parameter_list . _COMMA parameter

    _COMMA  shift, and go to state 55

    $default  reduce using rule 12 (real_param_list)


State 38

   13 parameter_list: parameter .

    $default  reduce using rule 13 (parameter_list)


State 39

   58 inc_exp: _ID _INCOP .

    $default  reduce using rule 58 (inc_exp)


State 40

   72 function_call: _ID $@9 . _LPAREN real_arg_list _RPAREN

    _LPAREN  shift, and go to state 56


State 41

   49 num_exp: num_exp . _AROP exp
   64 exp: _LPAREN num_exp . _RPAREN
   82 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 57
    _AROP    shift, and go to state 47
    _RELOP   shift, and go to state 48


State 42

   55 basic_bool: _LPAREN bool_exp . _RPAREN
   57 bool_exp: bool_exp . _BOOLOP basic_bool
   66 conditional_exp: _LPAREN bool_exp . _RPAREN _QMARK exp_c _DOUBLEDOT exp_c

    _RPAREN  shift, and go to state 58
    _BOOLOP  shift, and go to state 50


State 43

   65 exp: _LPAREN conditional_exp . _RPAREN

    _RPAREN  shift, and go to state 59


State 44

   53 basic_bool: _NOT _LPAREN . basic_bool _RPAREN
   54           | _NOT _LPAREN . exp _RPAREN

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 61
    basic_bool     go to state 62
    inc_exp        go to state 29
    exp            go to state 63
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 45

   59 inc_exp: _INCOP _ID .

    $default  reduce using rule 59 (inc_exp)


State 46

   42 exp_statement: num_exp _SEMICOLON .

    $default  reduce using rule 42 (exp_statement)


State 47

   49 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _LPAREN       shift, and go to state 64
    _INCOP        shift, and go to state 24

    inc_exp        go to state 29
    exp            go to state 65
    literal        go to state 32
    function_call  go to state 33


State 48

   82 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _LPAREN       shift, and go to state 64
    _INCOP        shift, and go to state 24

    num_exp        go to state 66
    inc_exp        go to state 29
    exp            go to state 67
    literal        go to state 32
    function_call  go to state 33


State 49

   43 exp_statement: bool_exp _SEMICOLON .

    $default  reduce using rule 43 (exp_statement)


State 50

   57 bool_exp: bool_exp _BOOLOP . basic_bool

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 61
    basic_bool     go to state 68
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 51

   52 basic_bool: exp _BOOLOP . basic_bool

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 61
    basic_bool     go to state 69
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 52

   44 exp_statement: conditional_exp _SEMICOLON .

    $default  reduce using rule 44 (exp_statement)


State 53

   15 parameter: _TYPE _ID .

    $default  reduce using rule 15 (parameter)


State 54

   10 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 . _RPAREN body

    _RPAREN  shift, and go to state 70


State 55

   14 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 35

    parameter  go to state 71


State 56

   72 function_call: _ID $@9 _LPAREN . real_arg_list _RPAREN

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    $default  reduce using rule 73 (real_arg_list)

    num_exp        go to state 72
    basic_bool     go to state 27
    bool_exp       go to state 73
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    real_arg_list  go to state 74
    argument_list  go to state 75
    argument       go to state 76
    rel_exp        go to state 34


State 57

   64 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 64 (exp)


State 58

   55 basic_bool: _LPAREN bool_exp _RPAREN .
   66 conditional_exp: _LPAREN bool_exp _RPAREN . _QMARK exp_c _DOUBLEDOT exp_c

    _QMARK  shift, and go to state 77

    $default  reduce using rule 55 (basic_bool)


State 59

   65 exp: _LPAREN conditional_exp _RPAREN .

    $default  reduce using rule 65 (exp)


State 60

   55 basic_bool: _LPAREN . bool_exp _RPAREN
   64 exp: _LPAREN . num_exp _RPAREN
   65    | _LPAREN . conditional_exp _RPAREN

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp          go to state 41
    basic_bool       go to state 27
    bool_exp         go to state 78
    inc_exp          go to state 29
    exp              go to state 30
    conditional_exp  go to state 43
    literal          go to state 32
    function_call    go to state 33
    rel_exp          go to state 34


State 61

   49 num_exp: num_exp . _AROP exp
   82 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 47
    _RELOP  shift, and go to state 48


State 62

   53 basic_bool: _NOT _LPAREN basic_bool . _RPAREN

    _RPAREN  shift, and go to state 79


State 63

   48 num_exp: exp .
   52 basic_bool: exp . _BOOLOP basic_bool
   54           | _NOT _LPAREN exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _BOOLOP  shift, and go to state 51

    $default  reduce using rule 48 (num_exp)


State 64

   64 exp: _LPAREN . num_exp _RPAREN
   65    | _LPAREN . conditional_exp _RPAREN

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _LPAREN       shift, and go to state 81
    _INCOP        shift, and go to state 24

    num_exp          go to state 82
    inc_exp          go to state 29
    exp              go to state 67
    conditional_exp  go to state 43
    literal          go to state 32
    function_call    go to state 33


State 65

   49 num_exp: num_exp _AROP exp .

    $default  reduce using rule 49 (num_exp)


State 66

   49 num_exp: num_exp . _AROP exp
   82 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 47

    $default  reduce using rule 82 (rel_exp)


State 67

   48 num_exp: exp .

    $default  reduce using rule 48 (num_exp)


State 68

   57 bool_exp: bool_exp _BOOLOP basic_bool .

    $default  reduce using rule 57 (bool_exp)


State 69

   52 basic_bool: exp _BOOLOP basic_bool .

    $default  reduce using rule 52 (basic_bool)


State 70

   10 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 _RPAREN . body

    _LBRACKET  shift, and go to state 83

    body  go to state 84


State 71

   14 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 14 (parameter_list)


State 72

   49 num_exp: num_exp . _AROP exp
   77 argument: num_exp .
   82 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 47
    _RELOP  shift, and go to state 48

    $default  reduce using rule 77 (argument)


State 73

   57 bool_exp: bool_exp . _BOOLOP basic_bool
   78 argument: bool_exp .

    _BOOLOP  shift, and go to state 50

    $default  reduce using rule 78 (argument)


State 74

   72 function_call: _ID $@9 _LPAREN real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 85


State 75

   74 real_arg_list: argument_list .
   76 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 86

    $default  reduce using rule 74 (real_arg_list)


State 76

   75 argument_list: argument .

    $default  reduce using rule 75 (argument_list)


State 77

   66 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK . exp_c _DOUBLEDOT exp_c

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 87
    basic_bool     go to state 27
    bool_exp       go to state 88
    inc_exp        go to state 29
    exp            go to state 30
    exp_c          go to state 89
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 78

   55 basic_bool: _LPAREN bool_exp . _RPAREN
   57 bool_exp: bool_exp . _BOOLOP basic_bool

    _RPAREN  shift, and go to state 90
    _BOOLOP  shift, and go to state 50


State 79

   53 basic_bool: _NOT _LPAREN basic_bool _RPAREN .

    $default  reduce using rule 53 (basic_bool)


State 80

   54 basic_bool: _NOT _LPAREN exp _RPAREN .

    $default  reduce using rule 54 (basic_bool)


State 81

   64 exp: _LPAREN . num_exp _RPAREN
   65    | _LPAREN . conditional_exp _RPAREN
   66 conditional_exp: _LPAREN . bool_exp _RPAREN _QMARK exp_c _DOUBLEDOT exp_c

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp          go to state 41
    basic_bool       go to state 27
    bool_exp         go to state 91
    inc_exp          go to state 29
    exp              go to state 30
    conditional_exp  go to state 43
    literal          go to state 32
    function_call    go to state 33
    rel_exp          go to state 34


State 82

   49 num_exp: num_exp . _AROP exp
   64 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 57
    _AROP    shift, and go to state 47


State 83

   16 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 17 (variable_list)

    variable_list  go to state 92


State 84

   10 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 _RPAREN body .

    $default  reduce using rule 10 (function)


State 85

   72 function_call: _ID $@9 _LPAREN real_arg_list _RPAREN .

    $default  reduce using rule 72 (function_call)


State 86

   76 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 72
    basic_bool     go to state 27
    bool_exp       go to state 73
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    argument       go to state 93
    rel_exp        go to state 34


State 87

   49 num_exp: num_exp . _AROP exp
   67 exp_c: num_exp .
   82 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 47
    _RELOP  shift, and go to state 48

    $default  reduce using rule 67 (exp_c)


State 88

   57 bool_exp: bool_exp . _BOOLOP basic_bool
   68 exp_c: bool_exp .

    _BOOLOP  shift, and go to state 50

    $default  reduce using rule 68 (exp_c)


State 89

   66 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK exp_c . _DOUBLEDOT exp_c

    _DOUBLEDOT  shift, and go to state 94


State 90

   55 basic_bool: _LPAREN bool_exp _RPAREN .

    $default  reduce using rule 55 (basic_bool)


State 91

   57 bool_exp: bool_exp . _BOOLOP basic_bool
   66 conditional_exp: _LPAREN bool_exp . _RPAREN _QMARK exp_c _DOUBLEDOT exp_c

    _RPAREN  shift, and go to state 95
    _BOOLOP  shift, and go to state 50


State 92

   16 body: _LBRACKET variable_list . statement_list _RBRACKET
   18 variable_list: variable_list . variable

    _TYPE  shift, and go to state 96

    $default  reduce using rule 25 (statement_list)

    variable        go to state 97
    statement_list  go to state 98


State 93

   76 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 76 (argument_list)


State 94

   66 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK exp_c _DOUBLEDOT . exp_c

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 87
    basic_bool     go to state 27
    bool_exp       go to state 88
    inc_exp        go to state 29
    exp            go to state 30
    exp_c          go to state 99
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 95

   66 conditional_exp: _LPAREN bool_exp _RPAREN . _QMARK exp_c _DOUBLEDOT exp_c

    _QMARK  shift, and go to state 77


State 96

   20 variable: _TYPE . $@4 id_list opt_assign

    $default  reduce using rule 19 ($@4)

    $@4  go to state 100


State 97

   18 variable_list: variable_list variable .

    $default  reduce using rule 18 (variable_list)


State 98

   16 body: _LBRACKET variable_list statement_list . _RBRACKET
   26 statement_list: statement_list . statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _RBRACKET     shift, and go to state 107
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 108
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 99

   66 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK exp_c _DOUBLEDOT exp_c .

    $default  reduce using rule 66 (conditional_exp)


State 100

   20 variable: _TYPE $@4 . id_list opt_assign

    _ID  shift, and go to state 117

    id_list  go to state 118


State 101

   81 if_part: _IF . _LPAREN bool_exp _RPAREN statement

    _LPAREN  shift, and go to state 119


State 102

   83 return_statement: _RETURN . num_exp _SEMICOLON
   84                 | _RETURN . bool_exp _SEMICOLON
   85                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _SEMICOLON    shift, and go to state 120
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 121
    basic_bool     go to state 27
    bool_exp       go to state 122
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 103

   39 para_statement: _PARA . _ID $@7 _EN _LPAREN literal _DDOT literal paso_part $@8 _RPAREN statement

    _ID  shift, and go to state 123


State 104

   36 branch_statement: _BRANCH . _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _LSQRBRACKET  shift, and go to state 124


State 105

   46 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   47                     | _ID . _ASSIGN bool_exp _SEMICOLON
   58 inc_exp: _ID . _INCOP
   62 exp: _ID .
   72 function_call: _ID . $@9 _LPAREN real_arg_list _RPAREN

    _ASSIGN  shift, and go to state 125
    _INCOP   shift, and go to state 39

    _LPAREN   reduce using rule 71 ($@9)
    $default  reduce using rule 62 (exp)

    $@9  go to state 40


State 106

   45 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 25 (statement_list)

    statement_list  go to state 126


State 107

   16 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 16 (body)


State 108

   26 statement_list: statement_list statement .

    $default  reduce using rule 26 (statement_list)


State 109

   32 statement: branch_statement .

    $default  reduce using rule 32 (statement)


State 110

   31 statement: para_statement .

    $default  reduce using rule 31 (statement)


State 111

   30 statement: exp_statement .

    $default  reduce using rule 30 (statement)


State 112

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 113

   28 statement: assignment_statement .

    $default  reduce using rule 28 (statement)


State 114

   29 statement: if_statement .

    $default  reduce using rule 29 (statement)


State 115

   79 if_statement: if_part .
   80             | if_part . _ELSE statement

    _ELSE  shift, and go to state 127

    $default  reduce using rule 79 (if_statement)


State 116

   33 statement: return_statement .

    $default  reduce using rule 33 (statement)


State 117

   23 id_list: _ID .

    $default  reduce using rule 23 (id_list)


State 118

   20 variable: _TYPE $@4 id_list . opt_assign
   24 id_list: id_list . _COMMA _ID

    _ASSIGN     shift, and go to state 14
    _SEMICOLON  shift, and go to state 15
    _COMMA      shift, and go to state 128

    opt_assign  go to state 129


State 119

   81 if_part: _IF _LPAREN . bool_exp _RPAREN statement

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 61
    basic_bool     go to state 27
    bool_exp       go to state 130
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 120

   85 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 85 (return_statement)


State 121

   49 num_exp: num_exp . _AROP exp
   82 rel_exp: num_exp . _RELOP num_exp
   83 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 131
    _AROP       shift, and go to state 47
    _RELOP      shift, and go to state 48


State 122

   57 bool_exp: bool_exp . _BOOLOP basic_bool
   84 return_statement: _RETURN bool_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 132
    _BOOLOP     shift, and go to state 50


State 123

   39 para_statement: _PARA _ID . $@7 _EN _LPAREN literal _DDOT literal paso_part $@8 _RPAREN statement

    $default  reduce using rule 37 ($@7)

    $@7  go to state 133


State 124

   36 branch_statement: _BRANCH _LSQRBRACKET . _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _ID  shift, and go to state 134


State 125

   46 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   47                     | _ID _ASSIGN . bool_exp _SEMICOLON

    _ID           shift, and go to state 18
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 60
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    num_exp        go to state 135
    basic_bool     go to state 27
    bool_exp       go to state 136
    inc_exp        go to state 29
    exp            go to state 30
    literal        go to state 32
    function_call  go to state 33
    rel_exp        go to state 34


State 126

   26 statement_list: statement_list . statement
   45 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _RBRACKET     shift, and go to state 137
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 108
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 127

   80 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 138
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 128

   24 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 139


State 129

   20 variable: _TYPE $@4 id_list opt_assign .

    $default  reduce using rule 20 (variable)


State 130

   57 bool_exp: bool_exp . _BOOLOP basic_bool
   81 if_part: _IF _LPAREN bool_exp . _RPAREN statement

    _RPAREN  shift, and go to state 140
    _BOOLOP  shift, and go to state 50


State 131

   83 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 83 (return_statement)


State 132

   84 return_statement: _RETURN bool_exp _SEMICOLON .

    $default  reduce using rule 84 (return_statement)


State 133

   39 para_statement: _PARA _ID $@7 . _EN _LPAREN literal _DDOT literal paso_part $@8 _RPAREN statement

    _EN  shift, and go to state 141


State 134

   36 branch_statement: _BRANCH _LSQRBRACKET _ID . $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 34 ($@5)

    $@5  go to state 142


State 135

   46 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   49 num_exp: num_exp . _AROP exp
   82 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 143
    _AROP       shift, and go to state 47
    _RELOP      shift, and go to state 48


State 136

   47 assignment_statement: _ID _ASSIGN bool_exp . _SEMICOLON
   57 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 144
    _BOOLOP     shift, and go to state 50


State 137

   45 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 45 (compound_statement)


State 138

   80 if_statement: if_part _ELSE statement .

    $default  reduce using rule 80 (if_statement)


State 139

   24 id_list: id_list _COMMA _ID .

    $default  reduce using rule 24 (id_list)


State 140

   81 if_part: _IF _LPAREN bool_exp _RPAREN . statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 145
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 141

   39 para_statement: _PARA _ID $@7 _EN . _LPAREN literal _DDOT literal paso_part $@8 _RPAREN statement

    _LPAREN  shift, and go to state 146


State 142

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 . _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 147


State 143

   46 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 46 (assignment_statement)


State 144

   47 assignment_statement: _ID _ASSIGN bool_exp _SEMICOLON .

    $default  reduce using rule 47 (assignment_statement)


State 145

   81 if_part: _IF _LPAREN bool_exp _RPAREN statement .

    $default  reduce using rule 81 (if_part)


State 146

   39 para_statement: _PARA _ID $@7 _EN _LPAREN . literal _DDOT literal paso_part $@8 _RPAREN statement

    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20

    literal  go to state 148


State 147

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW . literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20

    literal  go to state 149


State 148

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal . _DDOT literal paso_part $@8 _RPAREN statement

    _DDOT  shift, and go to state 150


State 149

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal . _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 151


State 150

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT . literal paso_part $@8 _RPAREN statement

    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20

    literal  go to state 152


State 151

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW . literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20

    literal  go to state 153


State 152

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT literal . paso_part $@8 _RPAREN statement

    _PASO  shift, and go to state 154

    $default  reduce using rule 40 (paso_part)

    paso_part  go to state 155


State 153

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal . _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 156


State 154

   41 paso_part: _PASO . literal

    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20

    literal  go to state 157


State 155

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT literal paso_part . $@8 _RPAREN statement

    $default  reduce using rule 38 ($@8)

    $@8  go to state 158


State 156

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW . literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20

    literal  go to state 159


State 157

   41 paso_part: _PASO literal .

    $default  reduce using rule 41 (paso_part)


State 158

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT literal paso_part $@8 . _RPAREN statement

    _RPAREN  shift, and go to state 160


State 159

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal . _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RSQRBRACKET  shift, and go to state 161


State 160

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT literal paso_part $@8 _RPAREN . statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 162
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 161

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET . $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 35 ($@6)

    $@6  go to state 163


State 162

   39 para_statement: _PARA _ID $@7 _EN _LPAREN literal _DDOT literal paso_part $@8 _RPAREN statement .

    $default  reduce using rule 39 (para_statement)


State 163

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 . _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _FIRST  shift, and go to state 164


State 164

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST . statement _SECOND statement _THIRD statement _OTHERWISE statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 165
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 165

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement . _SECOND statement _THIRD statement _OTHERWISE statement

    _SECOND  shift, and go to state 166


State 166

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND . statement _THIRD statement _OTHERWISE statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 167
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 167

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement . _THIRD statement _OTHERWISE statement

    _THIRD  shift, and go to state 168


State 168

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD . statement _OTHERWISE statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 169
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 169

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement . _OTHERWISE statement

    _OTHERWISE  shift, and go to state 170


State 170

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE . statement

    _IF           shift, and go to state 101
    _RETURN       shift, and go to state 102
    _PARA         shift, and go to state 103
    _BRANCH       shift, and go to state 104
    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 19
    _UINT_NUMBER  shift, and go to state 20
    _BOOL_VALUE   shift, and go to state 21
    _LPAREN       shift, and go to state 22
    _LBRACKET     shift, and go to state 106
    _NOT          shift, and go to state 23
    _INCOP        shift, and go to state 24

    statement             go to state 171
    branch_statement      go to state 109
    para_statement        go to state 110
    exp_statement         go to state 111
    compound_statement    go to state 112
    assignment_statement  go to state 113
    num_exp               go to state 26
    basic_bool            go to state 27
    bool_exp              go to state 28
    inc_exp               go to state 29
    exp                   go to state 30
    conditional_exp       go to state 31
    literal               go to state 32
    function_call         go to state 33
    if_statement          go to state 114
    if_part               go to state 115
    rel_exp               go to state 34
    return_statement      go to state 116


State 171

   36 branch_statement: _BRANCH _LSQRBRACKET _ID $@5 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@6 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement .

    $default  reduce using rule 36 (branch_statement)
