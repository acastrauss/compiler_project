Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    7 real_param_list: %empty
    8                | parameter_list

    9 parameter_list: parameter
   10               | parameter_list _COMMA parameter

   11 parameter: _TYPE _ID

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list _RBRACKET

   14 variable_list: %empty
   15              | variable_list variable

   16 $@3: %empty

   17 variable: _TYPE $@3 id_list _SEMICOLON

   18 id_list: _ID
   19        | id_list _COMMA _ID

   20 statement_list: %empty
   21               | statement_list statement

   22 statement: compound_statement
   23          | assignment_statement
   24          | if_statement
   25          | exp_statement

   26 exp_statement: num_exp _SEMICOLON
   27              | bool_exp _SEMICOLON

   28 compound_statement: _LBRACKET statement_list _RBRACKET

   29 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   30                     | _ID _ASSIGN bool_exp _SEMICOLON

   31 num_exp: exp
   32        | num_exp _AROP exp

   33 basic_bool: _BOOL_VALUE
   34           | rel_exp
   35           | exp _BOOLOP basic_bool

   36 bool_exp: basic_bool
   37         | bool_exp _BOOLOP basic_bool

   38 inc_exp: _ID _INCOP
   39        | _INCOP _ID

   40 exp: literal
   41    | inc_exp
   42    | _ID
   43    | function_call
   44    | _LPAREN num_exp _RPAREN

   45 literal: _INT_NUMBER
   46        | _UINT_NUMBER

   47 $@4: %empty

   48 function_call: _ID $@4 _LPAREN real_arg_list _RPAREN

   49 real_arg_list: %empty
   50              | argument_list

   51 argument_list: argument
   52              | argument_list _COMMA argument

   53 argument: num_exp

   54 if_statement: if_part
   55             | if_part _ELSE statement

   56 if_part: _IF _LPAREN bool_exp _RPAREN statement

   57 rel_exp: num_exp _RELOP num_exp

   58 return_statement: _RETURN num_exp _SEMICOLON
   59                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 11 17
    _IF (259) 56
    _ELSE (260) 55
    _RETURN (261) 58 59
    _ID <s> (262) 6 11 18 19 29 30 38 39 42 48
    _INT_NUMBER <s> (263) 45
    _UINT_NUMBER <s> (264) 46
    _BOOL_VALUE <s> (265) 33
    _LPAREN (266) 6 44 48 56
    _RPAREN (267) 6 44 48 56
    _LBRACKET (268) 12 13 28
    _RBRACKET (269) 12 13 28
    _ASSIGN (270) 29 30
    _SEMICOLON (271) 17 26 27 29 30 58 59
    _COMMA (272) 10 19 52
    _AROP <i> (273) 32
    _RELOP <i> (274) 57
    _INCOP <i> (275) 38 39
    _BOOLOP <i> (276) 35 37
    ONLY_IF (277)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1
        on right: 0
    function_list (25)
        on left: 2 3
        on right: 1 3
    function (26)
        on left: 6
        on right: 2 3
    $@1 (27)
        on left: 4
        on right: 6
    $@2 (28)
        on left: 5
        on right: 6
    real_param_list (29)
        on left: 7 8
        on right: 6
    parameter_list (30)
        on left: 9 10
        on right: 8 10
    parameter (31)
        on left: 11
        on right: 9 10
    body (32)
        on left: 12 13
        on right: 6
    variable_list (33)
        on left: 14 15
        on right: 12 13 15
    variable (34)
        on left: 17
        on right: 15
    $@3 (35)
        on left: 16
        on right: 17
    id_list (36)
        on left: 18 19
        on right: 17 19
    statement_list (37)
        on left: 20 21
        on right: 12 13 21 28
    statement (38)
        on left: 22 23 24 25
        on right: 21 55 56
    exp_statement (39)
        on left: 26 27
        on right: 25
    compound_statement (40)
        on left: 28
        on right: 22
    assignment_statement (41)
        on left: 29 30
        on right: 23
    num_exp <i> (42)
        on left: 31 32
        on right: 26 29 32 44 53 57 58
    basic_bool <i> (43)
        on left: 33 34 35
        on right: 35 36 37
    bool_exp <i> (44)
        on left: 36 37
        on right: 27 30 37 56
    inc_exp <i> (45)
        on left: 38 39
        on right: 41
    exp <i> (46)
        on left: 40 41 42 43 44
        on right: 31 32 35
    literal <i> (47)
        on left: 45 46
        on right: 40
    function_call <i> (48)
        on left: 48
        on right: 43
    $@4 (49)
        on left: 47
        on right: 48
    real_arg_list <i> (50)
        on left: 49 50
        on right: 48
    argument_list <i> (51)
        on left: 51 52
        on right: 50 52
    argument <i> (52)
        on left: 53
        on right: 51 52
    if_statement (53)
        on left: 54 55
        on right: 24
    if_part (54)
        on left: 56
        on right: 54 55
    rel_exp <i> (55)
        on left: 57
        on right: 34
    return_statement (56)
        on left: 58 59
        on right: 12


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN real_param_list $@2 _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN real_param_list $@2 _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . real_param_list $@2 _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (real_param_list)

    real_param_list  go to state 11
    parameter_list   go to state 12
    parameter        go to state 13


State 10

   11 parameter: _TYPE . _ID

    _ID  shift, and go to state 14


State 11

    6 function: _TYPE _ID $@1 _LPAREN real_param_list . $@2 _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 12

    8 real_param_list: parameter_list .
   10 parameter_list: parameter_list . _COMMA parameter

    _COMMA  shift, and go to state 16

    $default  reduce using rule 8 (real_param_list)


State 13

    9 parameter_list: parameter .

    $default  reduce using rule 9 (parameter_list)


State 14

   11 parameter: _TYPE _ID .

    $default  reduce using rule 11 (parameter)


State 15

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 . _RPAREN body

    _RPAREN  shift, and go to state 17


State 16

   10 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 10

    parameter  go to state 18


State 17

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 18

   10 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 10 (parameter_list)


State 19

   12 body: _LBRACKET . variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 14 (variable_list)

    variable_list  go to state 21


State 20

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body .

    $default  reduce using rule 6 (function)


State 21

   12 body: _LBRACKET variable_list . statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list . statement_list _RBRACKET
   15 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 20 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   17 variable: _TYPE . $@3 id_list _SEMICOLON

    $default  reduce using rule 16 ($@3)

    $@3  go to state 25


State 23

   15 variable_list: variable_list variable .

    $default  reduce using rule 15 (variable_list)


State 24

   12 body: _LBRACKET variable_list statement_list . return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list . _RBRACKET
   21 statement_list: statement_list . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _ID           shift, and go to state 28
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _LBRACKET     shift, and go to state 33
    _RBRACKET     shift, and go to state 34
    _INCOP        shift, and go to state 35

    statement             go to state 36
    exp_statement         go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    num_exp               go to state 40
    basic_bool            go to state 41
    bool_exp              go to state 42
    inc_exp               go to state 43
    exp                   go to state 44
    literal               go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    rel_exp               go to state 49
    return_statement      go to state 50


State 25

   17 variable: _TYPE $@3 . id_list _SEMICOLON

    _ID  shift, and go to state 51

    id_list  go to state 52


State 26

   56 if_part: _IF . _LPAREN bool_exp _RPAREN statement

    _LPAREN  shift, and go to state 53


State 27

   58 return_statement: _RETURN . num_exp _SEMICOLON
   59                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _LPAREN       shift, and go to state 32
    _SEMICOLON    shift, and go to state 55
    _INCOP        shift, and go to state 35

    num_exp        go to state 56
    inc_exp        go to state 43
    exp            go to state 57
    literal        go to state 45
    function_call  go to state 46


State 28

   29 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   30                     | _ID . _ASSIGN bool_exp _SEMICOLON
   38 inc_exp: _ID . _INCOP
   42 exp: _ID .
   48 function_call: _ID . $@4 _LPAREN real_arg_list _RPAREN

    _ASSIGN  shift, and go to state 58
    _INCOP   shift, and go to state 59

    _LPAREN   reduce using rule 47 ($@4)
    $default  reduce using rule 42 (exp)

    $@4  go to state 60


State 29

   45 literal: _INT_NUMBER .

    $default  reduce using rule 45 (literal)


State 30

   46 literal: _UINT_NUMBER .

    $default  reduce using rule 46 (literal)


State 31

   33 basic_bool: _BOOL_VALUE .

    $default  reduce using rule 33 (basic_bool)


State 32

   44 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 61
    inc_exp        go to state 43
    exp            go to state 57
    literal        go to state 45
    function_call  go to state 46


State 33

   28 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 20 (statement_list)

    statement_list  go to state 62


State 34

   13 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 13 (body)


State 35

   39 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 63


State 36

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 37

   25 statement: exp_statement .

    $default  reduce using rule 25 (statement)


State 38

   22 statement: compound_statement .

    $default  reduce using rule 22 (statement)


State 39

   23 statement: assignment_statement .

    $default  reduce using rule 23 (statement)


State 40

   26 exp_statement: num_exp . _SEMICOLON
   32 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 64
    _AROP       shift, and go to state 65
    _RELOP      shift, and go to state 66


State 41

   36 bool_exp: basic_bool .

    $default  reduce using rule 36 (bool_exp)


State 42

   27 exp_statement: bool_exp . _SEMICOLON
   37 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 67
    _BOOLOP     shift, and go to state 68


State 43

   41 exp: inc_exp .

    $default  reduce using rule 41 (exp)


State 44

   31 num_exp: exp .
   35 basic_bool: exp . _BOOLOP basic_bool

    _BOOLOP  shift, and go to state 69

    $default  reduce using rule 31 (num_exp)


State 45

   40 exp: literal .

    $default  reduce using rule 40 (exp)


State 46

   43 exp: function_call .

    $default  reduce using rule 43 (exp)


State 47

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 48

   54 if_statement: if_part .
   55             | if_part . _ELSE statement

    _ELSE  shift, and go to state 70

    $default  reduce using rule 54 (if_statement)


State 49

   34 basic_bool: rel_exp .

    $default  reduce using rule 34 (basic_bool)


State 50

   12 body: _LBRACKET variable_list statement_list return_statement . _RBRACKET

    _RBRACKET  shift, and go to state 71


State 51

   18 id_list: _ID .

    $default  reduce using rule 18 (id_list)


State 52

   17 variable: _TYPE $@3 id_list . _SEMICOLON
   19 id_list: id_list . _COMMA _ID

    _SEMICOLON  shift, and go to state 72
    _COMMA      shift, and go to state 73


State 53

   56 if_part: _IF _LPAREN . bool_exp _RPAREN statement

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 74
    basic_bool     go to state 41
    bool_exp       go to state 75
    inc_exp        go to state 43
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 49


State 54

   38 inc_exp: _ID . _INCOP
   42 exp: _ID .
   48 function_call: _ID . $@4 _LPAREN real_arg_list _RPAREN

    _INCOP  shift, and go to state 59

    _LPAREN   reduce using rule 47 ($@4)
    $default  reduce using rule 42 (exp)

    $@4  go to state 60


State 55

   59 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 56

   32 num_exp: num_exp . _AROP exp
   58 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 65


State 57

   31 num_exp: exp .

    $default  reduce using rule 31 (num_exp)


State 58

   29 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   30                     | _ID _ASSIGN . bool_exp _SEMICOLON

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 77
    basic_bool     go to state 41
    bool_exp       go to state 78
    inc_exp        go to state 43
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 49


State 59

   38 inc_exp: _ID _INCOP .

    $default  reduce using rule 38 (inc_exp)


State 60

   48 function_call: _ID $@4 . _LPAREN real_arg_list _RPAREN

    _LPAREN  shift, and go to state 79


State 61

   32 num_exp: num_exp . _AROP exp
   44 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _AROP    shift, and go to state 65


State 62

   21 statement_list: statement_list . statement
   28 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 26
    _ID           shift, and go to state 28
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _LBRACKET     shift, and go to state 33
    _RBRACKET     shift, and go to state 81
    _INCOP        shift, and go to state 35

    statement             go to state 36
    exp_statement         go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    num_exp               go to state 40
    basic_bool            go to state 41
    bool_exp              go to state 42
    inc_exp               go to state 43
    exp                   go to state 44
    literal               go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    rel_exp               go to state 49


State 63

   39 inc_exp: _INCOP _ID .

    $default  reduce using rule 39 (inc_exp)


State 64

   26 exp_statement: num_exp _SEMICOLON .

    $default  reduce using rule 26 (exp_statement)


State 65

   32 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    inc_exp        go to state 43
    exp            go to state 82
    literal        go to state 45
    function_call  go to state 46


State 66

   57 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 83
    inc_exp        go to state 43
    exp            go to state 57
    literal        go to state 45
    function_call  go to state 46


State 67

   27 exp_statement: bool_exp _SEMICOLON .

    $default  reduce using rule 27 (exp_statement)


State 68

   37 bool_exp: bool_exp _BOOLOP . basic_bool

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 74
    basic_bool     go to state 84
    inc_exp        go to state 43
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 49


State 69

   35 basic_bool: exp _BOOLOP . basic_bool

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 74
    basic_bool     go to state 85
    inc_exp        go to state 43
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 49


State 70

   55 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 26
    _ID           shift, and go to state 28
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _LBRACKET     shift, and go to state 33
    _INCOP        shift, and go to state 35

    statement             go to state 86
    exp_statement         go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    num_exp               go to state 40
    basic_bool            go to state 41
    bool_exp              go to state 42
    inc_exp               go to state 43
    exp                   go to state 44
    literal               go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    rel_exp               go to state 49


State 71

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET .

    $default  reduce using rule 12 (body)


State 72

   17 variable: _TYPE $@3 id_list _SEMICOLON .

    $default  reduce using rule 17 (variable)


State 73

   19 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 87


State 74

   32 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 65
    _RELOP  shift, and go to state 66


State 75

   37 bool_exp: bool_exp . _BOOLOP basic_bool
   56 if_part: _IF _LPAREN bool_exp . _RPAREN statement

    _RPAREN  shift, and go to state 88
    _BOOLOP  shift, and go to state 68


State 76

   58 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 58 (return_statement)


State 77

   29 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   32 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 89
    _AROP       shift, and go to state 65
    _RELOP      shift, and go to state 66


State 78

   30 assignment_statement: _ID _ASSIGN bool_exp . _SEMICOLON
   37 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 90
    _BOOLOP     shift, and go to state 68


State 79

   48 function_call: _ID $@4 _LPAREN . real_arg_list _RPAREN

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    $default  reduce using rule 49 (real_arg_list)

    num_exp        go to state 91
    inc_exp        go to state 43
    exp            go to state 57
    literal        go to state 45
    function_call  go to state 46
    real_arg_list  go to state 92
    argument_list  go to state 93
    argument       go to state 94


State 80

   44 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 44 (exp)


State 81

   28 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 28 (compound_statement)


State 82

   32 num_exp: num_exp _AROP exp .

    $default  reduce using rule 32 (num_exp)


State 83

   32 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 65

    $default  reduce using rule 57 (rel_exp)


State 84

   37 bool_exp: bool_exp _BOOLOP basic_bool .

    $default  reduce using rule 37 (bool_exp)


State 85

   35 basic_bool: exp _BOOLOP basic_bool .

    $default  reduce using rule 35 (basic_bool)


State 86

   55 if_statement: if_part _ELSE statement .

    $default  reduce using rule 55 (if_statement)


State 87

   19 id_list: id_list _COMMA _ID .

    $default  reduce using rule 19 (id_list)


State 88

   56 if_part: _IF _LPAREN bool_exp _RPAREN . statement

    _IF           shift, and go to state 26
    _ID           shift, and go to state 28
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _BOOL_VALUE   shift, and go to state 31
    _LPAREN       shift, and go to state 32
    _LBRACKET     shift, and go to state 33
    _INCOP        shift, and go to state 35

    statement             go to state 95
    exp_statement         go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    num_exp               go to state 40
    basic_bool            go to state 41
    bool_exp              go to state 42
    inc_exp               go to state 43
    exp                   go to state 44
    literal               go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    rel_exp               go to state 49


State 89

   29 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 29 (assignment_statement)


State 90

   30 assignment_statement: _ID _ASSIGN bool_exp _SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


State 91

   32 num_exp: num_exp . _AROP exp
   53 argument: num_exp .

    _AROP  shift, and go to state 65

    $default  reduce using rule 53 (argument)


State 92

   48 function_call: _ID $@4 _LPAREN real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 96


State 93

   50 real_arg_list: argument_list .
   52 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 97

    $default  reduce using rule 50 (real_arg_list)


State 94

   51 argument_list: argument .

    $default  reduce using rule 51 (argument_list)


State 95

   56 if_part: _IF _LPAREN bool_exp _RPAREN statement .

    $default  reduce using rule 56 (if_part)


State 96

   48 function_call: _ID $@4 _LPAREN real_arg_list _RPAREN .

    $default  reduce using rule 48 (function_call)


State 97

   52 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 54
    _INT_NUMBER   shift, and go to state 29
    _UINT_NUMBER  shift, and go to state 30
    _LPAREN       shift, and go to state 32
    _INCOP        shift, and go to state 35

    num_exp        go to state 91
    inc_exp        go to state 43
    exp            go to state 57
    literal        go to state 45
    function_call  go to state 46
    argument       go to state 98


State 98

   52 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 52 (argument_list)
