Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    7 real_param_list: empty_argument
    8                | parameter_list

    9 parameter_list: parameter
   10               | parameter_list parameter

   11 parameter: _TYPE _ID

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list _RBRACKET

   14 variable_list: %empty
   15              | variable_list variable

   16 $@3: %empty

   17 variable: _TYPE $@3 id_list _SEMICOLON

   18 id_list: _ID
   19        | id_list _COMMA _ID

   20 statement_list: %empty
   21               | statement_list statement

   22 statement: compound_statement
   23          | assignment_statement
   24          | if_statement

   25 compound_statement: _LBRACKET statement_list _RBRACKET

   26 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   27 num_exp: exp
   28        | num_exp _AROP exp

   29 inc_exp: _ID _INCOP
   30        | _INCOP _ID

   31 exp: literal
   32    | inc_exp
   33    | _ID
   34    | function_call
   35    | _LPAREN num_exp _RPAREN

   36 literal: _INT_NUMBER
   37        | _UINT_NUMBER

   38 $@4: %empty

   39 function_call: _ID $@4 _LPAREN real_arg_list _RPAREN

   40 empty_argument: %empty

   41 real_arg_list: empty_argument
   42              | argument_list

   43 argument_list: argument
   44              | argument_list _COMMA argument

   45 argument: num_exp

   46 if_statement: if_part
   47             | if_part _ELSE statement

   48 if_part: _IF _LPAREN rel_exp _RPAREN statement

   49 rel_exp: num_exp _RELOP num_exp

   50 return_statement: _RETURN num_exp _SEMICOLON
   51                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 11 17
    _IF (259) 48
    _ELSE (260) 47
    _RETURN (261) 50 51
    _ID <s> (262) 6 11 18 19 26 29 30 33 39
    _INT_NUMBER <s> (263) 36
    _UINT_NUMBER <s> (264) 37
    _LPAREN (265) 6 35 39 48
    _RPAREN (266) 6 35 39 48
    _LBRACKET (267) 12 13 25
    _RBRACKET (268) 12 13 25
    _ASSIGN (269) 26
    _SEMICOLON (270) 17 26 50 51
    _COMMA (271) 19 44
    _AROP <i> (272) 28
    _RELOP <i> (273) 49
    _INCOP <i> (274) 29 30
    ONLY_IF (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    function_list (23)
        on left: 2 3
        on right: 1 3
    function (24)
        on left: 6
        on right: 2 3
    $@1 (25)
        on left: 4
        on right: 6
    $@2 (26)
        on left: 5
        on right: 6
    real_param_list (27)
        on left: 7 8
        on right: 6
    parameter_list (28)
        on left: 9 10
        on right: 8 10
    parameter (29)
        on left: 11
        on right: 9 10
    body (30)
        on left: 12 13
        on right: 6
    variable_list (31)
        on left: 14 15
        on right: 12 13 15
    variable (32)
        on left: 17
        on right: 15
    $@3 (33)
        on left: 16
        on right: 17
    id_list (34)
        on left: 18 19
        on right: 17 19
    statement_list (35)
        on left: 20 21
        on right: 12 13 21 25
    statement (36)
        on left: 22 23 24
        on right: 21 47 48
    compound_statement (37)
        on left: 25
        on right: 22
    assignment_statement (38)
        on left: 26
        on right: 23
    num_exp <i> (39)
        on left: 27 28
        on right: 26 28 35 45 49 50
    inc_exp <i> (40)
        on left: 29 30
        on right: 32
    exp <i> (41)
        on left: 31 32 33 34 35
        on right: 27 28
    literal <i> (42)
        on left: 36 37
        on right: 31
    function_call <i> (43)
        on left: 39
        on right: 34
    $@4 (44)
        on left: 38
        on right: 39
    empty_argument (45)
        on left: 40
        on right: 7 41
    real_arg_list <i> (46)
        on left: 41 42
        on right: 39
    argument_list <i> (47)
        on left: 43 44
        on right: 42 44
    argument <i> (48)
        on left: 45
        on right: 43 44
    if_statement (49)
        on left: 46 47
        on right: 24
    if_part (50)
        on left: 48
        on right: 46 47
    rel_exp <i> (51)
        on left: 49
        on right: 48
    return_statement (52)
        on left: 50 51
        on right: 12


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN real_param_list $@2 _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN real_param_list $@2 _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . real_param_list $@2 _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 40 (empty_argument)

    real_param_list  go to state 11
    parameter_list   go to state 12
    parameter        go to state 13
    empty_argument   go to state 14


State 10

   11 parameter: _TYPE . _ID

    _ID  shift, and go to state 15


State 11

    6 function: _TYPE _ID $@1 _LPAREN real_param_list . $@2 _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 16


State 12

    8 real_param_list: parameter_list .
   10 parameter_list: parameter_list . parameter

    _TYPE  shift, and go to state 10

    $default  reduce using rule 8 (real_param_list)

    parameter  go to state 17


State 13

    9 parameter_list: parameter .

    $default  reduce using rule 9 (parameter_list)


State 14

    7 real_param_list: empty_argument .

    $default  reduce using rule 7 (real_param_list)


State 15

   11 parameter: _TYPE _ID .

    $default  reduce using rule 11 (parameter)


State 16

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter_list: parameter_list parameter .

    $default  reduce using rule 10 (parameter_list)


State 18

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list statement_list return_statement _RBRACKET
   13     | _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 14 (variable_list)

    variable_list  go to state 21


State 20

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body .

    $default  reduce using rule 6 (function)


State 21

   12 body: _LBRACKET variable_list . statement_list return_statement _RBRACKET
   13     | _LBRACKET variable_list . statement_list _RBRACKET
   15 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 20 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   17 variable: _TYPE . $@3 id_list _SEMICOLON

    $default  reduce using rule 16 ($@3)

    $@3  go to state 25


State 23

   15 variable_list: variable_list variable .

    $default  reduce using rule 15 (variable_list)


State 24

   12 body: _LBRACKET variable_list statement_list . return_statement _RBRACKET
   13     | _LBRACKET variable_list statement_list . _RBRACKET
   21 statement_list: statement_list . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _RBRACKET  shift, and go to state 30

    statement             go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35
    return_statement      go to state 36


State 25

   17 variable: _TYPE $@3 . id_list _SEMICOLON

    _ID  shift, and go to state 37

    id_list  go to state 38


State 26

   48 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 39


State 27

   50 return_statement: _RETURN . num_exp _SEMICOLON
   51                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _SEMICOLON    shift, and go to state 44
    _INCOP        shift, and go to state 45

    num_exp        go to state 46
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 28

   26 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 51


State 29

   25 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 20 (statement_list)

    statement_list  go to state 52


State 30

   13 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 13 (body)


State 31

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 32

   22 statement: compound_statement .

    $default  reduce using rule 22 (statement)


State 33

   23 statement: assignment_statement .

    $default  reduce using rule 23 (statement)


State 34

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 35

   46 if_statement: if_part .
   47             | if_part . _ELSE statement

    _ELSE  shift, and go to state 53

    $default  reduce using rule 46 (if_statement)


State 36

   12 body: _LBRACKET variable_list statement_list return_statement . _RBRACKET

    _RBRACKET  shift, and go to state 54


State 37

   18 id_list: _ID .

    $default  reduce using rule 18 (id_list)


State 38

   17 variable: _TYPE $@3 id_list . _SEMICOLON
   19 id_list: id_list . _COMMA _ID

    _SEMICOLON  shift, and go to state 55
    _COMMA      shift, and go to state 56


State 39

   48 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    num_exp        go to state 57
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 58


State 40

   29 inc_exp: _ID . _INCOP
   33 exp: _ID .
   39 function_call: _ID . $@4 _LPAREN real_arg_list _RPAREN

    _INCOP  shift, and go to state 59

    _LPAREN   reduce using rule 38 ($@4)
    $default  reduce using rule 33 (exp)

    $@4  go to state 60


State 41

   36 literal: _INT_NUMBER .

    $default  reduce using rule 36 (literal)


State 42

   37 literal: _UINT_NUMBER .

    $default  reduce using rule 37 (literal)


State 43

   35 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    num_exp        go to state 61
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 44

   51 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 51 (return_statement)


State 45

   30 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 62


State 46

   28 num_exp: num_exp . _AROP exp
   50 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 63
    _AROP       shift, and go to state 64


State 47

   32 exp: inc_exp .

    $default  reduce using rule 32 (exp)


State 48

   27 num_exp: exp .

    $default  reduce using rule 27 (num_exp)


State 49

   31 exp: literal .

    $default  reduce using rule 31 (exp)


State 50

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 51

   26 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    num_exp        go to state 65
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 52

   21 statement_list: statement_list . statement
   25 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 26
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _RBRACKET  shift, and go to state 66

    statement             go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 53

   47 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 26
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29

    statement             go to state 67
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 54

   12 body: _LBRACKET variable_list statement_list return_statement _RBRACKET .

    $default  reduce using rule 12 (body)


State 55

   17 variable: _TYPE $@3 id_list _SEMICOLON .

    $default  reduce using rule 17 (variable)


State 56

   19 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 68


State 57

   28 num_exp: num_exp . _AROP exp
   49 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 64
    _RELOP  shift, and go to state 69


State 58

   48 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 70


State 59

   29 inc_exp: _ID _INCOP .

    $default  reduce using rule 29 (inc_exp)


State 60

   39 function_call: _ID $@4 . _LPAREN real_arg_list _RPAREN

    _LPAREN  shift, and go to state 71


State 61

   28 num_exp: num_exp . _AROP exp
   35 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 72
    _AROP    shift, and go to state 64


State 62

   30 inc_exp: _INCOP _ID .

    $default  reduce using rule 30 (inc_exp)


State 63

   50 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 50 (return_statement)


State 64

   28 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    inc_exp        go to state 47
    exp            go to state 73
    literal        go to state 49
    function_call  go to state 50


State 65

   26 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   28 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 74
    _AROP       shift, and go to state 64


State 66

   25 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 25 (compound_statement)


State 67

   47 if_statement: if_part _ELSE statement .

    $default  reduce using rule 47 (if_statement)


State 68

   19 id_list: id_list _COMMA _ID .

    $default  reduce using rule 19 (id_list)


State 69

   49 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    num_exp        go to state 75
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 70

   48 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 26
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29

    statement             go to state 76
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35


State 71

   39 function_call: _ID $@4 _LPAREN . real_arg_list _RPAREN

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    $default  reduce using rule 40 (empty_argument)

    num_exp         go to state 77
    inc_exp         go to state 47
    exp             go to state 48
    literal         go to state 49
    function_call   go to state 50
    empty_argument  go to state 78
    real_arg_list   go to state 79
    argument_list   go to state 80
    argument        go to state 81


State 72

   35 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 35 (exp)


State 73

   28 num_exp: num_exp _AROP exp .

    $default  reduce using rule 28 (num_exp)


State 74

   26 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 26 (assignment_statement)


State 75

   28 num_exp: num_exp . _AROP exp
   49 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 64

    $default  reduce using rule 49 (rel_exp)


State 76

   48 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 48 (if_part)


State 77

   28 num_exp: num_exp . _AROP exp
   45 argument: num_exp .

    _AROP  shift, and go to state 64

    $default  reduce using rule 45 (argument)


State 78

   41 real_arg_list: empty_argument .

    $default  reduce using rule 41 (real_arg_list)


State 79

   39 function_call: _ID $@4 _LPAREN real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 82


State 80

   42 real_arg_list: argument_list .
   44 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 83

    $default  reduce using rule 42 (real_arg_list)


State 81

   43 argument_list: argument .

    $default  reduce using rule 43 (argument_list)


State 82

   39 function_call: _ID $@4 _LPAREN real_arg_list _RPAREN .

    $default  reduce using rule 39 (function_call)


State 83

   44 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43
    _INCOP        shift, and go to state 45

    num_exp        go to state 77
    inc_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    argument       go to state 84


State 84

   44 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 44 (argument_list)
