Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    7 real_param_list: %empty
    8                | parameter_list

    9 parameter_list: parameter
   10               | parameter_list _COMMA parameter

   11 parameter: _TYPE _ID

   12 body: _LBRACKET variable_list statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 $@3: %empty

   16 variable: _TYPE $@3 id_list opt_assign

   17 opt_assign: _SEMICOLON
   18           | _ASSIGN exp_statement

   19 id_list: _ID
   20        | id_list _COMMA _ID

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | exp_statement
   27          | para_statement
   28          | branch_statement
   29          | return_statement

   30 $@4: %empty

   31 $@5: %empty

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

   33 $@6: %empty

   34 $@7: %empty

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

   36 paso_part: %empty
   37          | _PASO literal

   38 exp_statement: num_exp _SEMICOLON
   39              | bool_exp _SEMICOLON

   40 compound_statement: _LBRACKET statement_list _RBRACKET

   41 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   42                     | _ID _ASSIGN bool_exp _SEMICOLON

   43 num_exp: exp
   44        | num_exp _AROP exp

   45 basic_bool: _BOOL_VALUE
   46           | rel_exp
   47           | exp _BOOLOP basic_bool
   48           | _NOT _LPAREN basic_bool _RPAREN
   49           | _NOT _LPAREN exp _RPAREN
   50           | _LPAREN bool_exp _RPAREN

   51 bool_exp: basic_bool
   52         | bool_exp _BOOLOP basic_bool

   53 inc_exp: _ID _INCOP
   54        | _INCOP _ID

   55 exp: literal
   56    | inc_exp
   57    | _ID
   58    | function_call
   59    | _LPAREN num_exp _RPAREN

   60 literal: _INT_NUMBER
   61        | _UINT_NUMBER

   62 $@8: %empty

   63 function_call: _ID $@8 _LPAREN real_arg_list _RPAREN

   64 real_arg_list: %empty
   65              | argument_list

   66 argument_list: argument
   67              | argument_list _COMMA argument

   68 argument: num_exp
   69         | bool_exp

   70 if_statement: if_part
   71             | if_part _ELSE statement

   72 if_part: _IF _LPAREN bool_exp _RPAREN statement

   73 rel_exp: num_exp _RELOP num_exp

   74 return_statement: _RETURN num_exp _SEMICOLON
   75                 | _RETURN bool_exp _SEMICOLON
   76                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 11 16
    _IF (259) 72
    _ELSE (260) 71
    _RETURN (261) 74 75 76
    _PARA <s> (262) 35
    _EN (263) 35
    _DDOT (264) 35
    _PASO (265) 37
    _BRANCH (266) 32
    _FIRST (267) 32
    _SECOND (268) 32
    _THIRD (269) 32
    _OTHERWISE (270) 32
    _ID <s> (271) 6 11 19 20 32 35 41 42 53 54 57 63
    _INT_NUMBER <s> (272) 60
    _UINT_NUMBER <s> (273) 61
    _BOOL_VALUE <s> (274) 45
    _LPAREN (275) 6 35 48 49 50 59 63 72
    _RPAREN (276) 6 35 48 49 50 59 63 72
    _LBRACKET (277) 12 40
    _RBRACKET (278) 12 40
    _LSQRBRACKET (279) 32
    _RSQRBRACKET (280) 32
    _ASSIGN (281) 18 41 42
    _SEMICOLON (282) 17 38 39 41 42 74 75 76
    _COMMA (283) 10 20 67
    _RARROW (284) 32
    _NOT (285) 48 49
    _AROP <i> (286) 44
    _RELOP <i> (287) 73
    _INCOP <i> (288) 53 54
    _BOOLOP <i> (289) 47 52
    ONLY_IF (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1
        on right: 0
    function_list (38)
        on left: 2 3
        on right: 1 3
    function (39)
        on left: 6
        on right: 2 3
    $@1 (40)
        on left: 4
        on right: 6
    $@2 (41)
        on left: 5
        on right: 6
    real_param_list (42)
        on left: 7 8
        on right: 6
    parameter_list (43)
        on left: 9 10
        on right: 8 10
    parameter (44)
        on left: 11
        on right: 9 10
    body (45)
        on left: 12
        on right: 6
    variable_list (46)
        on left: 13 14
        on right: 12 14
    variable (47)
        on left: 16
        on right: 14
    $@3 (48)
        on left: 15
        on right: 16
    opt_assign (49)
        on left: 17 18
        on right: 16
    id_list (50)
        on left: 19 20
        on right: 16 20
    statement_list (51)
        on left: 21 22
        on right: 12 22 40
    statement (52)
        on left: 23 24 25 26 27 28 29
        on right: 22 32 35 71 72
    branch_statement (53)
        on left: 32
        on right: 28
    $@4 (54)
        on left: 30
        on right: 32
    $@5 (55)
        on left: 31
        on right: 32
    para_statement (56)
        on left: 35
        on right: 27
    $@6 (57)
        on left: 33
        on right: 35
    $@7 (58)
        on left: 34
        on right: 35
    paso_part <i> (59)
        on left: 36 37
        on right: 35
    exp_statement (60)
        on left: 38 39
        on right: 18 26
    compound_statement (61)
        on left: 40
        on right: 23
    assignment_statement (62)
        on left: 41 42
        on right: 24
    num_exp <i> (63)
        on left: 43 44
        on right: 38 41 44 59 68 73 74
    basic_bool <i> (64)
        on left: 45 46 47 48 49 50
        on right: 47 48 51 52
    bool_exp <i> (65)
        on left: 51 52
        on right: 39 42 50 52 69 72 75
    inc_exp <i> (66)
        on left: 53 54
        on right: 56
    exp <i> (67)
        on left: 55 56 57 58 59
        on right: 43 44 47 49
    literal <i> (68)
        on left: 60 61
        on right: 32 35 37 55
    function_call <i> (69)
        on left: 63
        on right: 58
    $@8 (70)
        on left: 62
        on right: 63
    real_arg_list <i> (71)
        on left: 64 65
        on right: 63
    argument_list <i> (72)
        on left: 66 67
        on right: 65 67
    argument <i> (73)
        on left: 68 69
        on right: 66 67
    if_statement (74)
        on left: 70 71
        on right: 25
    if_part (75)
        on left: 72
        on right: 70 71
    rel_exp <i> (76)
        on left: 73
        on right: 46
    return_statement (77)
        on left: 74 75 76
        on right: 29


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN real_param_list $@2 _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN real_param_list $@2 _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN real_param_list $@2 _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . real_param_list $@2 _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (real_param_list)

    real_param_list  go to state 11
    parameter_list   go to state 12
    parameter        go to state 13


State 10

   11 parameter: _TYPE . _ID

    _ID  shift, and go to state 14


State 11

    6 function: _TYPE _ID $@1 _LPAREN real_param_list . $@2 _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 12

    8 real_param_list: parameter_list .
   10 parameter_list: parameter_list . _COMMA parameter

    _COMMA  shift, and go to state 16

    $default  reduce using rule 8 (real_param_list)


State 13

    9 parameter_list: parameter .

    $default  reduce using rule 9 (parameter_list)


State 14

   11 parameter: _TYPE _ID .

    $default  reduce using rule 11 (parameter)


State 15

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 . _RPAREN body

    _RPAREN  shift, and go to state 17


State 16

   10 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 10

    parameter  go to state 18


State 17

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 18

   10 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 10 (parameter_list)


State 19

   12 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    6 function: _TYPE _ID $@1 _LPAREN real_param_list $@2 _RPAREN body .

    $default  reduce using rule 6 (function)


State 21

   12 body: _LBRACKET variable_list . statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 21 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   16 variable: _TYPE . $@3 id_list opt_assign

    $default  reduce using rule 15 ($@3)

    $@3  go to state 25


State 23

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 24

   12 body: _LBRACKET variable_list statement_list . _RBRACKET
   22 statement_list: statement_list . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _RBRACKET     shift, and go to state 36
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 39
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 25

   16 variable: _TYPE $@3 . id_list opt_assign

    _ID  shift, and go to state 56

    id_list  go to state 57


State 26

   72 if_part: _IF . _LPAREN bool_exp _RPAREN statement

    _LPAREN  shift, and go to state 58


State 27

   74 return_statement: _RETURN . num_exp _SEMICOLON
   75                 | _RETURN . bool_exp _SEMICOLON
   76                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _SEMICOLON    shift, and go to state 60
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 61
    basic_bool     go to state 46
    bool_exp       go to state 62
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 28

   35 para_statement: _PARA . _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    _ID  shift, and go to state 63


State 29

   32 branch_statement: _BRANCH . _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _LSQRBRACKET  shift, and go to state 64


State 30

   41 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   42                     | _ID . _ASSIGN bool_exp _SEMICOLON
   53 inc_exp: _ID . _INCOP
   57 exp: _ID .
   63 function_call: _ID . $@8 _LPAREN real_arg_list _RPAREN

    _ASSIGN  shift, and go to state 65
    _INCOP   shift, and go to state 66

    _LPAREN   reduce using rule 62 ($@8)
    $default  reduce using rule 57 (exp)

    $@8  go to state 67


State 31

   60 literal: _INT_NUMBER .

    $default  reduce using rule 60 (literal)


State 32

   61 literal: _UINT_NUMBER .

    $default  reduce using rule 61 (literal)


State 33

   45 basic_bool: _BOOL_VALUE .

    $default  reduce using rule 45 (basic_bool)


State 34

   50 basic_bool: _LPAREN . bool_exp _RPAREN
   59 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 68
    basic_bool     go to state 46
    bool_exp       go to state 69
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 35

   40 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 70


State 36

   12 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 37

   48 basic_bool: _NOT . _LPAREN basic_bool _RPAREN
   49           | _NOT . _LPAREN exp _RPAREN

    _LPAREN  shift, and go to state 71


State 38

   54 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 72


State 39

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 40

   28 statement: branch_statement .

    $default  reduce using rule 28 (statement)


State 41

   27 statement: para_statement .

    $default  reduce using rule 27 (statement)


State 42

   26 statement: exp_statement .

    $default  reduce using rule 26 (statement)


State 43

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 44

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 45

   38 exp_statement: num_exp . _SEMICOLON
   44 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 73
    _AROP       shift, and go to state 74
    _RELOP      shift, and go to state 75


State 46

   51 bool_exp: basic_bool .

    $default  reduce using rule 51 (bool_exp)


State 47

   39 exp_statement: bool_exp . _SEMICOLON
   52 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 76
    _BOOLOP     shift, and go to state 77


State 48

   56 exp: inc_exp .

    $default  reduce using rule 56 (exp)


State 49

   43 num_exp: exp .
   47 basic_bool: exp . _BOOLOP basic_bool

    _BOOLOP  shift, and go to state 78

    $default  reduce using rule 43 (num_exp)


State 50

   55 exp: literal .

    $default  reduce using rule 55 (exp)


State 51

   58 exp: function_call .

    $default  reduce using rule 58 (exp)


State 52

   25 statement: if_statement .

    $default  reduce using rule 25 (statement)


State 53

   70 if_statement: if_part .
   71             | if_part . _ELSE statement

    _ELSE  shift, and go to state 79

    $default  reduce using rule 70 (if_statement)


State 54

   46 basic_bool: rel_exp .

    $default  reduce using rule 46 (basic_bool)


State 55

   29 statement: return_statement .

    $default  reduce using rule 29 (statement)


State 56

   19 id_list: _ID .

    $default  reduce using rule 19 (id_list)


State 57

   16 variable: _TYPE $@3 id_list . opt_assign
   20 id_list: id_list . _COMMA _ID

    _ASSIGN     shift, and go to state 80
    _SEMICOLON  shift, and go to state 81
    _COMMA      shift, and go to state 82

    opt_assign  go to state 83


State 58

   72 if_part: _IF _LPAREN . bool_exp _RPAREN statement

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 84
    basic_bool     go to state 46
    bool_exp       go to state 85
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 59

   53 inc_exp: _ID . _INCOP
   57 exp: _ID .
   63 function_call: _ID . $@8 _LPAREN real_arg_list _RPAREN

    _INCOP  shift, and go to state 66

    _LPAREN   reduce using rule 62 ($@8)
    $default  reduce using rule 57 (exp)

    $@8  go to state 67


State 60

   76 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 76 (return_statement)


State 61

   44 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp . _RELOP num_exp
   74 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 86
    _AROP       shift, and go to state 74
    _RELOP      shift, and go to state 75


State 62

   52 bool_exp: bool_exp . _BOOLOP basic_bool
   75 return_statement: _RETURN bool_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 87
    _BOOLOP     shift, and go to state 77


State 63

   35 para_statement: _PARA _ID . $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    $default  reduce using rule 33 ($@6)

    $@6  go to state 88


State 64

   32 branch_statement: _BRANCH _LSQRBRACKET . _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _ID  shift, and go to state 89


State 65

   41 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON
   42                     | _ID _ASSIGN . bool_exp _SEMICOLON

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 90
    basic_bool     go to state 46
    bool_exp       go to state 91
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 66

   53 inc_exp: _ID _INCOP .

    $default  reduce using rule 53 (inc_exp)


State 67

   63 function_call: _ID $@8 . _LPAREN real_arg_list _RPAREN

    _LPAREN  shift, and go to state 92


State 68

   44 num_exp: num_exp . _AROP exp
   59 exp: _LPAREN num_exp . _RPAREN
   73 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 93
    _AROP    shift, and go to state 74
    _RELOP   shift, and go to state 75


State 69

   50 basic_bool: _LPAREN bool_exp . _RPAREN
   52 bool_exp: bool_exp . _BOOLOP basic_bool

    _RPAREN  shift, and go to state 94
    _BOOLOP  shift, and go to state 77


State 70

   22 statement_list: statement_list . statement
   40 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _RBRACKET     shift, and go to state 95
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 39
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 71

   48 basic_bool: _NOT _LPAREN . basic_bool _RPAREN
   49           | _NOT _LPAREN . exp _RPAREN

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 84
    basic_bool     go to state 96
    inc_exp        go to state 48
    exp            go to state 97
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 72

   54 inc_exp: _INCOP _ID .

    $default  reduce using rule 54 (inc_exp)


State 73

   38 exp_statement: num_exp _SEMICOLON .

    $default  reduce using rule 38 (exp_statement)


State 74

   44 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 98
    _INCOP        shift, and go to state 38

    inc_exp        go to state 48
    exp            go to state 99
    literal        go to state 50
    function_call  go to state 51


State 75

   73 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 98
    _INCOP        shift, and go to state 38

    num_exp        go to state 100
    inc_exp        go to state 48
    exp            go to state 101
    literal        go to state 50
    function_call  go to state 51


State 76

   39 exp_statement: bool_exp _SEMICOLON .

    $default  reduce using rule 39 (exp_statement)


State 77

   52 bool_exp: bool_exp _BOOLOP . basic_bool

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 84
    basic_bool     go to state 102
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 78

   47 basic_bool: exp _BOOLOP . basic_bool

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 84
    basic_bool     go to state 103
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 79

   71 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 104
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 80

   18 opt_assign: _ASSIGN . exp_statement

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    exp_statement  go to state 105
    num_exp        go to state 45
    basic_bool     go to state 46
    bool_exp       go to state 47
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 54


State 81

   17 opt_assign: _SEMICOLON .

    $default  reduce using rule 17 (opt_assign)


State 82

   20 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 106


State 83

   16 variable: _TYPE $@3 id_list opt_assign .

    $default  reduce using rule 16 (variable)


State 84

   44 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 74
    _RELOP  shift, and go to state 75


State 85

   52 bool_exp: bool_exp . _BOOLOP basic_bool
   72 if_part: _IF _LPAREN bool_exp . _RPAREN statement

    _RPAREN  shift, and go to state 107
    _BOOLOP  shift, and go to state 77


State 86

   74 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 74 (return_statement)


State 87

   75 return_statement: _RETURN bool_exp _SEMICOLON .

    $default  reduce using rule 75 (return_statement)


State 88

   35 para_statement: _PARA _ID $@6 . _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    _EN  shift, and go to state 108


State 89

   32 branch_statement: _BRANCH _LSQRBRACKET _ID . $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 30 ($@4)

    $@4  go to state 109


State 90

   41 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   44 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 110
    _AROP       shift, and go to state 74
    _RELOP      shift, and go to state 75


State 91

   42 assignment_statement: _ID _ASSIGN bool_exp . _SEMICOLON
   52 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 111
    _BOOLOP     shift, and go to state 77


State 92

   63 function_call: _ID $@8 _LPAREN . real_arg_list _RPAREN

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    $default  reduce using rule 64 (real_arg_list)

    num_exp        go to state 112
    basic_bool     go to state 46
    bool_exp       go to state 113
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    real_arg_list  go to state 114
    argument_list  go to state 115
    argument       go to state 116
    rel_exp        go to state 54


State 93

   59 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 59 (exp)


State 94

   50 basic_bool: _LPAREN bool_exp _RPAREN .

    $default  reduce using rule 50 (basic_bool)


State 95

   40 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 40 (compound_statement)


State 96

   48 basic_bool: _NOT _LPAREN basic_bool . _RPAREN

    _RPAREN  shift, and go to state 117


State 97

   43 num_exp: exp .
   47 basic_bool: exp . _BOOLOP basic_bool
   49           | _NOT _LPAREN exp . _RPAREN

    _RPAREN  shift, and go to state 118
    _BOOLOP  shift, and go to state 78

    $default  reduce using rule 43 (num_exp)


State 98

   59 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _LPAREN       shift, and go to state 98
    _INCOP        shift, and go to state 38

    num_exp        go to state 119
    inc_exp        go to state 48
    exp            go to state 101
    literal        go to state 50
    function_call  go to state 51


State 99

   44 num_exp: num_exp _AROP exp .

    $default  reduce using rule 44 (num_exp)


State 100

   44 num_exp: num_exp . _AROP exp
   73 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 74

    $default  reduce using rule 73 (rel_exp)


State 101

   43 num_exp: exp .

    $default  reduce using rule 43 (num_exp)


State 102

   52 bool_exp: bool_exp _BOOLOP basic_bool .

    $default  reduce using rule 52 (bool_exp)


State 103

   47 basic_bool: exp _BOOLOP basic_bool .

    $default  reduce using rule 47 (basic_bool)


State 104

   71 if_statement: if_part _ELSE statement .

    $default  reduce using rule 71 (if_statement)


State 105

   18 opt_assign: _ASSIGN exp_statement .

    $default  reduce using rule 18 (opt_assign)


State 106

   20 id_list: id_list _COMMA _ID .

    $default  reduce using rule 20 (id_list)


State 107

   72 if_part: _IF _LPAREN bool_exp _RPAREN . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 120
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 108

   35 para_statement: _PARA _ID $@6 _EN . _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement

    _LPAREN  shift, and go to state 121


State 109

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 . _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 122


State 110

   41 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 41 (assignment_statement)


State 111

   42 assignment_statement: _ID _ASSIGN bool_exp _SEMICOLON .

    $default  reduce using rule 42 (assignment_statement)


State 112

   44 num_exp: num_exp . _AROP exp
   68 argument: num_exp .
   73 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 74
    _RELOP  shift, and go to state 75

    $default  reduce using rule 68 (argument)


State 113

   52 bool_exp: bool_exp . _BOOLOP basic_bool
   69 argument: bool_exp .

    _BOOLOP  shift, and go to state 77

    $default  reduce using rule 69 (argument)


State 114

   63 function_call: _ID $@8 _LPAREN real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 123


State 115

   65 real_arg_list: argument_list .
   67 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 124

    $default  reduce using rule 65 (real_arg_list)


State 116

   66 argument_list: argument .

    $default  reduce using rule 66 (argument_list)


State 117

   48 basic_bool: _NOT _LPAREN basic_bool _RPAREN .

    $default  reduce using rule 48 (basic_bool)


State 118

   49 basic_bool: _NOT _LPAREN exp _RPAREN .

    $default  reduce using rule 49 (basic_bool)


State 119

   44 num_exp: num_exp . _AROP exp
   59 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 93
    _AROP    shift, and go to state 74


State 120

   72 if_part: _IF _LPAREN bool_exp _RPAREN statement .

    $default  reduce using rule 72 (if_part)


State 121

   35 para_statement: _PARA _ID $@6 _EN _LPAREN . literal _DDOT literal paso_part $@7 _RPAREN statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 125


State 122

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW . literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 126


State 123

   63 function_call: _ID $@8 _LPAREN real_arg_list _RPAREN .

    $default  reduce using rule 63 (function_call)


State 124

   67 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 59
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    num_exp        go to state 112
    basic_bool     go to state 46
    bool_exp       go to state 113
    inc_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 127
    rel_exp        go to state 54


State 125

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal . _DDOT literal paso_part $@7 _RPAREN statement

    _DDOT  shift, and go to state 128


State 126

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal . _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 129


State 127

   67 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 67 (argument_list)


State 128

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT . literal paso_part $@7 _RPAREN statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 130


State 129

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW . literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 131


State 130

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal . paso_part $@7 _RPAREN statement

    _PASO  shift, and go to state 132

    $default  reduce using rule 36 (paso_part)

    paso_part  go to state 133


State 131

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal . _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RARROW  shift, and go to state 134


State 132

   37 paso_part: _PASO . literal

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 135


State 133

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part . $@7 _RPAREN statement

    $default  reduce using rule 34 ($@7)

    $@7  go to state 136


State 134

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW . literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32

    literal  go to state 137


State 135

   37 paso_part: _PASO literal .

    $default  reduce using rule 37 (paso_part)


State 136

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 138


State 137

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal . _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _RSQRBRACKET  shift, and go to state 139


State 138

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 140
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 139

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET . $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    $default  reduce using rule 31 ($@5)

    $@5  go to state 141


State 140

   35 para_statement: _PARA _ID $@6 _EN _LPAREN literal _DDOT literal paso_part $@7 _RPAREN statement .

    $default  reduce using rule 35 (para_statement)


State 141

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 . _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement

    _FIRST  shift, and go to state 142


State 142

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST . statement _SECOND statement _THIRD statement _OTHERWISE statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 143
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 143

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement . _SECOND statement _THIRD statement _OTHERWISE statement

    _SECOND  shift, and go to state 144


State 144

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND . statement _THIRD statement _OTHERWISE statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 145
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 145

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement . _THIRD statement _OTHERWISE statement

    _THIRD  shift, and go to state 146


State 146

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD . statement _OTHERWISE statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 147
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 147

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement . _OTHERWISE statement

    _OTHERWISE  shift, and go to state 148


State 148

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE . statement

    _IF           shift, and go to state 26
    _RETURN       shift, and go to state 27
    _PARA         shift, and go to state 28
    _BRANCH       shift, and go to state 29
    _ID           shift, and go to state 30
    _INT_NUMBER   shift, and go to state 31
    _UINT_NUMBER  shift, and go to state 32
    _BOOL_VALUE   shift, and go to state 33
    _LPAREN       shift, and go to state 34
    _LBRACKET     shift, and go to state 35
    _NOT          shift, and go to state 37
    _INCOP        shift, and go to state 38

    statement             go to state 149
    branch_statement      go to state 40
    para_statement        go to state 41
    exp_statement         go to state 42
    compound_statement    go to state 43
    assignment_statement  go to state 44
    num_exp               go to state 45
    basic_bool            go to state 46
    bool_exp              go to state 47
    inc_exp               go to state 48
    exp                   go to state 49
    literal               go to state 50
    function_call         go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    rel_exp               go to state 54
    return_statement      go to state 55


State 149

   32 branch_statement: _BRANCH _LSQRBRACKET _ID $@4 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@5 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement .

    $default  reduce using rule 32 (branch_statement)
