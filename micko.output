Terminals unused in grammar

    _GLOBAL


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 glb_var_list function_list

    3 glb_var_list: %empty
    4             | glb_var_list glb_var

    5 glb_var: _TYPE glb_id_list opt_assign

    6 glb_id_list: _ID
    7            | glb_id_list _COMMA _ID

    8 function_list: function
    9              | function_list function

   10 $@2: %empty

   11 $@3: %empty

   12 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 _RPAREN body

   13 real_param_list: %empty
   14                | parameter_list

   15 parameter_list: parameter
   16               | parameter_list _COMMA parameter

   17 parameter: _TYPE _ID

   18 $@4: %empty

   19 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   20 variable_list: %empty
   21              | variable_list variable

   22 $@5: %empty

   23 variable: _TYPE $@5 id_list opt_assign

   24 opt_assign: _SEMICOLON
   25           | _ASSIGN exp_statement

   26 id_list: _ID
   27        | id_list _COMMA _ID

   28 statement_list: %empty
   29               | statement_list statement

   30 statement: compound_statement
   31          | assignment_statement
   32          | if_statement
   33          | exp_statement
   34          | para_statement
   35          | branch_statement
   36          | return_statement

   37 $@6: %empty

   38 $@7: %empty

   39 $@8: %empty

   40 $@9: %empty

   41 $@10: %empty

   42 $@11: %empty

   43 $@12: %empty

   44 $@13: %empty

   45 $@14: %empty

   46 $@15: %empty

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

   48 $@16: %empty

   49 $@17: %empty

   50 @18: %empty

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement

   52 paso_part: %empty
   53          | _PASO literal

   54 exp_statement: num_exp _SEMICOLON
   55              | bool_exp _SEMICOLON
   56              | conditional_exp _SEMICOLON

   57 compound_statement: _LBRACKET statement_list _RBRACKET

   58 assignment_statement: _ID _ASSIGN exp_statement

   59 num_exp: exp
   60        | num_exp _AROP exp

   61 basic_bool: _BOOL_VALUE
   62           | rel_exp
   63           | exp _BOOLOP exp
   64           | _NOT _LPAREN basic_bool _RPAREN
   65           | _NOT _LPAREN exp _RPAREN
   66           | _LPAREN bool_exp _RPAREN

   67 bool_exp: basic_bool
   68         | bool_exp _BOOLOP basic_bool

   69 inc_exp: _ID _INCOP
   70        | _INCOP _ID

   71 exp: literal
   72    | inc_exp
   73    | _ID
   74    | function_call
   75    | _LPAREN num_exp _RPAREN
   76    | _LPAREN conditional_exp _RPAREN

   77 @19: %empty

   78 @20: %empty

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

   80 exp_c: num_exp
   81      | bool_exp

   82 literal: _INT_NUMBER
   83        | _UINT_NUMBER

   84 $@21: %empty

   85 $@22: %empty

   86 function_call: _ID $@21 _LPAREN $@22 real_arg_list _RPAREN

   87 real_arg_list: %empty
   88              | argument_list

   89 argument_list: argument
   90              | argument_list _COMMA argument

   91 argument: exp_c

   92 if_statement: if_part
   93             | if_part _ELSE statement

   94 @23: %empty

   95 $@24: %empty

   96 if_part: _IF _LPAREN @23 bool_exp $@24 _RPAREN statement

   97 rel_exp: num_exp _RELOP num_exp

   98 return_statement: _RETURN num_exp _SEMICOLON
   99                 | _RETURN bool_exp _SEMICOLON
  100                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 12 17 23
    _IF (259) 96
    _ELSE (260) 93
    _RETURN (261) 98 99 100
    _GLOBAL (262)
    _PARA <s> (263) 51
    _EN (264) 51
    _DDOT (265) 51
    _PASO (266) 53
    _BRANCH (267) 47
    _FIRST (268) 47
    _SECOND (269) 47
    _THIRD (270) 47
    _OTHERWISE (271) 47
    _ID <s> (272) 6 7 12 17 26 27 47 51 58 69 70 73 86
    _INT_NUMBER <s> (273) 82
    _UINT_NUMBER <s> (274) 83
    _BOOL_VALUE <s> (275) 61
    _LPAREN (276) 12 51 64 65 66 75 76 79 86 96
    _RPAREN (277) 12 51 64 65 66 75 76 79 86 96
    _LBRACKET (278) 19 57
    _RBRACKET (279) 19 57
    _LSQRBRACKET (280) 47
    _RSQRBRACKET (281) 47
    _ASSIGN (282) 25 58
    _SEMICOLON (283) 24 54 55 56 98 99 100
    _COMMA (284) 7 16 27 90
    _RARROW (285) 47
    _QMARK (286) 79
    _DOUBLEDOT (287) 79
    _NOT (288) 64 65
    _AROP <i> (289) 60
    _RELOP <i> (290) 97
    _INCOP <i> (291) 69 70
    _BOOLOP <i> (292) 63 68
    ONLY_IF (293)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program (40)
        on left: 2
        on right: 0
    $@1 (41)
        on left: 1
        on right: 2
    glb_var_list (42)
        on left: 3 4
        on right: 2 4
    glb_var (43)
        on left: 5
        on right: 4
    glb_id_list (44)
        on left: 6 7
        on right: 5 7
    function_list (45)
        on left: 8 9
        on right: 2 9
    function (46)
        on left: 12
        on right: 8 9
    $@2 (47)
        on left: 10
        on right: 12
    $@3 (48)
        on left: 11
        on right: 12
    real_param_list (49)
        on left: 13 14
        on right: 12
    parameter_list (50)
        on left: 15 16
        on right: 14 16
    parameter (51)
        on left: 17
        on right: 15 16
    body (52)
        on left: 19
        on right: 12
    $@4 (53)
        on left: 18
        on right: 19
    variable_list (54)
        on left: 20 21
        on right: 19 21
    variable (55)
        on left: 23
        on right: 21
    $@5 (56)
        on left: 22
        on right: 23
    opt_assign <i> (57)
        on left: 24 25
        on right: 5 23
    id_list (58)
        on left: 26 27
        on right: 23 27
    statement_list (59)
        on left: 28 29
        on right: 19 29 57
    statement (60)
        on left: 30 31 32 33 34 35 36
        on right: 29 47 51 93 96
    branch_statement (61)
        on left: 47
        on right: 35
    $@6 (62)
        on left: 37
        on right: 47
    $@7 (63)
        on left: 38
        on right: 47
    $@8 (64)
        on left: 39
        on right: 47
    $@9 (65)
        on left: 40
        on right: 47
    $@10 (66)
        on left: 41
        on right: 47
    $@11 (67)
        on left: 42
        on right: 47
    $@12 (68)
        on left: 43
        on right: 47
    $@13 (69)
        on left: 44
        on right: 47
    $@14 (70)
        on left: 45
        on right: 47
    $@15 (71)
        on left: 46
        on right: 47
    para_statement (72)
        on left: 51
        on right: 34
    $@16 (73)
        on left: 48
        on right: 51
    $@17 (74)
        on left: 49
        on right: 51
    @18 (75)
        on left: 50
        on right: 51
    paso_part <i> (76)
        on left: 52 53
        on right: 51
    exp_statement <i> (77)
        on left: 54 55 56
        on right: 25 33 58
    compound_statement (78)
        on left: 57
        on right: 30
    assignment_statement (79)
        on left: 58
        on right: 31
    num_exp <i> (80)
        on left: 59 60
        on right: 54 60 75 80 97 98
    basic_bool <i> (81)
        on left: 61 62 63 64 65 66
        on right: 64 67 68
    bool_exp <i> (82)
        on left: 67 68
        on right: 55 66 68 79 81 96 99
    inc_exp <i> (83)
        on left: 69 70
        on right: 72
    exp <i> (84)
        on left: 71 72 73 74 75 76
        on right: 59 60 63 65
    conditional_exp <i> (85)
        on left: 79
        on right: 56 76
    @19 (86)
        on left: 77
        on right: 79
    @20 (87)
        on left: 78
        on right: 79
    exp_c <i> (88)
        on left: 80 81
        on right: 79 91
    literal <i> (89)
        on left: 82 83
        on right: 47 51 53 71
    function_call <i> (90)
        on left: 86
        on right: 74
    $@21 (91)
        on left: 84
        on right: 86
    $@22 (92)
        on left: 85
        on right: 86
    real_arg_list <i> (93)
        on left: 87 88
        on right: 86
    argument_list <i> (94)
        on left: 89 90
        on right: 88 90
    argument <i> (95)
        on left: 91
        on right: 89 90
    if_statement (96)
        on left: 92 93
        on right: 32
    if_part <i> (97)
        on left: 96
        on right: 92 93
    @23 (98)
        on left: 94
        on right: 96
    $@24 (99)
        on left: 95
        on right: 96
    rel_exp <i> (100)
        on left: 97
        on right: 62
    return_statement (101)
        on left: 98 99 100
        on right: 36


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . glb_var_list function_list

    $default  reduce using rule 3 (glb_var_list)

    glb_var_list  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 glb_var_list . function_list
    4 glb_var_list: glb_var_list . glb_var

    _TYPE  shift, and go to state 5

    glb_var        go to state 6
    function_list  go to state 7
    function       go to state 8


State 5

    5 glb_var: _TYPE . glb_id_list opt_assign
   12 function: _TYPE . _ID $@2 _LPAREN real_param_list $@3 _RPAREN body

    _ID  shift, and go to state 9

    glb_id_list  go to state 10


State 6

    4 glb_var_list: glb_var_list glb_var .

    $default  reduce using rule 4 (glb_var_list)


State 7

    2 program: $@1 glb_var_list function_list .
    9 function_list: function_list . function

    _TYPE  shift, and go to state 11

    $default  reduce using rule 2 (program)

    function  go to state 12


State 8

    8 function_list: function .

    $default  reduce using rule 8 (function_list)


State 9

    6 glb_id_list: _ID .
   12 function: _TYPE _ID . $@2 _LPAREN real_param_list $@3 _RPAREN body

    _LPAREN   reduce using rule 10 ($@2)
    $default  reduce using rule 6 (glb_id_list)

    $@2  go to state 13


State 10

    5 glb_var: _TYPE glb_id_list . opt_assign
    7 glb_id_list: glb_id_list . _COMMA _ID

    _ASSIGN     shift, and go to state 14
    _SEMICOLON  shift, and go to state 15
    _COMMA      shift, and go to state 16

    opt_assign  go to state 17


State 11

   12 function: _TYPE . _ID $@2 _LPAREN real_param_list $@3 _RPAREN body

    _ID  shift, and go to state 18


State 12

    9 function_list: function_list function .

    $default  reduce using rule 9 (function_list)


State 13

   12 function: _TYPE _ID $@2 . _LPAREN real_param_list $@3 _RPAREN body

    _LPAREN  shift, and go to state 19


State 14

   25 opt_assign: _ASSIGN . exp_statement

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    exp_statement    go to state 27
    num_exp          go to state 28
    basic_bool       go to state 29
    bool_exp         go to state 30
    inc_exp          go to state 31
    exp              go to state 32
    conditional_exp  go to state 33
    literal          go to state 34
    function_call    go to state 35
    rel_exp          go to state 36


State 15

   24 opt_assign: _SEMICOLON .

    $default  reduce using rule 24 (opt_assign)


State 16

    7 glb_id_list: glb_id_list _COMMA . _ID

    _ID  shift, and go to state 37


State 17

    5 glb_var: _TYPE glb_id_list opt_assign .

    $default  reduce using rule 5 (glb_var)


State 18

   12 function: _TYPE _ID . $@2 _LPAREN real_param_list $@3 _RPAREN body

    $default  reduce using rule 10 ($@2)

    $@2  go to state 13


State 19

   12 function: _TYPE _ID $@2 _LPAREN . real_param_list $@3 _RPAREN body

    _TYPE  shift, and go to state 38

    $default  reduce using rule 13 (real_param_list)

    real_param_list  go to state 39
    parameter_list   go to state 40
    parameter        go to state 41


State 20

   69 inc_exp: _ID . _INCOP
   73 exp: _ID .
   86 function_call: _ID . $@21 _LPAREN $@22 real_arg_list _RPAREN

    _INCOP  shift, and go to state 42

    _LPAREN   reduce using rule 84 ($@21)
    $default  reduce using rule 73 (exp)

    $@21  go to state 43


State 21

   82 literal: _INT_NUMBER .

    $default  reduce using rule 82 (literal)


State 22

   83 literal: _UINT_NUMBER .

    $default  reduce using rule 83 (literal)


State 23

   61 basic_bool: _BOOL_VALUE .

    $default  reduce using rule 61 (basic_bool)


State 24

   66 basic_bool: _LPAREN . bool_exp _RPAREN
   75 exp: _LPAREN . num_exp _RPAREN
   76    | _LPAREN . conditional_exp _RPAREN
   79 conditional_exp: _LPAREN . bool_exp _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp          go to state 44
    basic_bool       go to state 29
    bool_exp         go to state 45
    inc_exp          go to state 31
    exp              go to state 32
    conditional_exp  go to state 46
    literal          go to state 34
    function_call    go to state 35
    rel_exp          go to state 36


State 25

   64 basic_bool: _NOT . _LPAREN basic_bool _RPAREN
   65           | _NOT . _LPAREN exp _RPAREN

    _LPAREN  shift, and go to state 47


State 26

   70 inc_exp: _INCOP . _ID

    _ID  shift, and go to state 48


State 27

   25 opt_assign: _ASSIGN exp_statement .

    $default  reduce using rule 25 (opt_assign)


State 28

   54 exp_statement: num_exp . _SEMICOLON
   60 num_exp: num_exp . _AROP exp
   97 rel_exp: num_exp . _RELOP num_exp

    _SEMICOLON  shift, and go to state 49
    _AROP       shift, and go to state 50
    _RELOP      shift, and go to state 51


State 29

   67 bool_exp: basic_bool .

    $default  reduce using rule 67 (bool_exp)


State 30

   55 exp_statement: bool_exp . _SEMICOLON
   68 bool_exp: bool_exp . _BOOLOP basic_bool

    _SEMICOLON  shift, and go to state 52
    _BOOLOP     shift, and go to state 53


State 31

   72 exp: inc_exp .

    $default  reduce using rule 72 (exp)


State 32

   59 num_exp: exp .
   63 basic_bool: exp . _BOOLOP exp

    _BOOLOP  shift, and go to state 54

    $default  reduce using rule 59 (num_exp)


State 33

   56 exp_statement: conditional_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 55


State 34

   71 exp: literal .

    $default  reduce using rule 71 (exp)


State 35

   74 exp: function_call .

    $default  reduce using rule 74 (exp)


State 36

   62 basic_bool: rel_exp .

    $default  reduce using rule 62 (basic_bool)


State 37

    7 glb_id_list: glb_id_list _COMMA _ID .

    $default  reduce using rule 7 (glb_id_list)


State 38

   17 parameter: _TYPE . _ID

    _ID  shift, and go to state 56


State 39

   12 function: _TYPE _ID $@2 _LPAREN real_param_list . $@3 _RPAREN body

    $default  reduce using rule 11 ($@3)

    $@3  go to state 57


State 40

   14 real_param_list: parameter_list .
   16 parameter_list: parameter_list . _COMMA parameter

    _COMMA  shift, and go to state 58

    $default  reduce using rule 14 (real_param_list)


State 41

   15 parameter_list: parameter .

    $default  reduce using rule 15 (parameter_list)


State 42

   69 inc_exp: _ID _INCOP .

    $default  reduce using rule 69 (inc_exp)


State 43

   86 function_call: _ID $@21 . _LPAREN $@22 real_arg_list _RPAREN

    _LPAREN  shift, and go to state 59


State 44

   60 num_exp: num_exp . _AROP exp
   75 exp: _LPAREN num_exp . _RPAREN
   97 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 60
    _AROP    shift, and go to state 50
    _RELOP   shift, and go to state 51


State 45

   66 basic_bool: _LPAREN bool_exp . _RPAREN
   68 bool_exp: bool_exp . _BOOLOP basic_bool
   79 conditional_exp: _LPAREN bool_exp . _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

    _RPAREN  shift, and go to state 61
    _BOOLOP  shift, and go to state 53


State 46

   76 exp: _LPAREN conditional_exp . _RPAREN

    _RPAREN  shift, and go to state 62


State 47

   64 basic_bool: _NOT _LPAREN . basic_bool _RPAREN
   65           | _NOT _LPAREN . exp _RPAREN

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 64
    basic_bool     go to state 65
    inc_exp        go to state 31
    exp            go to state 66
    literal        go to state 34
    function_call  go to state 35
    rel_exp        go to state 36


State 48

   70 inc_exp: _INCOP _ID .

    $default  reduce using rule 70 (inc_exp)


State 49

   54 exp_statement: num_exp _SEMICOLON .

    $default  reduce using rule 54 (exp_statement)


State 50

   60 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 67
    _INCOP        shift, and go to state 26

    inc_exp        go to state 31
    exp            go to state 68
    literal        go to state 34
    function_call  go to state 35


State 51

   97 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 67
    _INCOP        shift, and go to state 26

    num_exp        go to state 69
    inc_exp        go to state 31
    exp            go to state 70
    literal        go to state 34
    function_call  go to state 35


State 52

   55 exp_statement: bool_exp _SEMICOLON .

    $default  reduce using rule 55 (exp_statement)


State 53

   68 bool_exp: bool_exp _BOOLOP . basic_bool

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 64
    basic_bool     go to state 71
    inc_exp        go to state 31
    exp            go to state 32
    literal        go to state 34
    function_call  go to state 35
    rel_exp        go to state 36


State 54

   63 basic_bool: exp _BOOLOP . exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 67
    _INCOP        shift, and go to state 26

    inc_exp        go to state 31
    exp            go to state 72
    literal        go to state 34
    function_call  go to state 35


State 55

   56 exp_statement: conditional_exp _SEMICOLON .

    $default  reduce using rule 56 (exp_statement)


State 56

   17 parameter: _TYPE _ID .

    $default  reduce using rule 17 (parameter)


State 57

   12 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 . _RPAREN body

    _RPAREN  shift, and go to state 73


State 58

   16 parameter_list: parameter_list _COMMA . parameter

    _TYPE  shift, and go to state 38

    parameter  go to state 74


State 59

   86 function_call: _ID $@21 _LPAREN . $@22 real_arg_list _RPAREN

    $default  reduce using rule 85 ($@22)

    $@22  go to state 75


State 60

   75 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 75 (exp)


State 61

   66 basic_bool: _LPAREN bool_exp _RPAREN .
   79 conditional_exp: _LPAREN bool_exp _RPAREN . _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

    _QMARK  shift, and go to state 76

    $default  reduce using rule 66 (basic_bool)


State 62

   76 exp: _LPAREN conditional_exp _RPAREN .

    $default  reduce using rule 76 (exp)


State 63

   66 basic_bool: _LPAREN . bool_exp _RPAREN
   75 exp: _LPAREN . num_exp _RPAREN
   76    | _LPAREN . conditional_exp _RPAREN

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp          go to state 44
    basic_bool       go to state 29
    bool_exp         go to state 77
    inc_exp          go to state 31
    exp              go to state 32
    conditional_exp  go to state 46
    literal          go to state 34
    function_call    go to state 35
    rel_exp          go to state 36


State 64

   60 num_exp: num_exp . _AROP exp
   97 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 50
    _RELOP  shift, and go to state 51


State 65

   64 basic_bool: _NOT _LPAREN basic_bool . _RPAREN

    _RPAREN  shift, and go to state 78


State 66

   59 num_exp: exp .
   63 basic_bool: exp . _BOOLOP exp
   65           | _NOT _LPAREN exp . _RPAREN

    _RPAREN  shift, and go to state 79
    _BOOLOP  shift, and go to state 54

    $default  reduce using rule 59 (num_exp)


State 67

   75 exp: _LPAREN . num_exp _RPAREN
   76    | _LPAREN . conditional_exp _RPAREN

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 80
    _INCOP        shift, and go to state 26

    num_exp          go to state 81
    inc_exp          go to state 31
    exp              go to state 70
    conditional_exp  go to state 46
    literal          go to state 34
    function_call    go to state 35


State 68

   60 num_exp: num_exp _AROP exp .

    $default  reduce using rule 60 (num_exp)


State 69

   60 num_exp: num_exp . _AROP exp
   97 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 50

    $default  reduce using rule 97 (rel_exp)


State 70

   59 num_exp: exp .

    $default  reduce using rule 59 (num_exp)


State 71

   68 bool_exp: bool_exp _BOOLOP basic_bool .

    $default  reduce using rule 68 (bool_exp)


State 72

   63 basic_bool: exp _BOOLOP exp .

    $default  reduce using rule 63 (basic_bool)


State 73

   12 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 _RPAREN . body

    _LBRACKET  shift, and go to state 82

    body  go to state 83


State 74

   16 parameter_list: parameter_list _COMMA parameter .

    $default  reduce using rule 16 (parameter_list)


State 75

   86 function_call: _ID $@21 _LPAREN $@22 . real_arg_list _RPAREN

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    $default  reduce using rule 87 (real_arg_list)

    num_exp        go to state 84
    basic_bool     go to state 29
    bool_exp       go to state 85
    inc_exp        go to state 31
    exp            go to state 32
    exp_c          go to state 86
    literal        go to state 34
    function_call  go to state 35
    real_arg_list  go to state 87
    argument_list  go to state 88
    argument       go to state 89
    rel_exp        go to state 36


State 76

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK . @19 exp_c @20 _DOUBLEDOT exp_c

    $default  reduce using rule 77 (@19)

    @19  go to state 90


State 77

   66 basic_bool: _LPAREN bool_exp . _RPAREN
   68 bool_exp: bool_exp . _BOOLOP basic_bool

    _RPAREN  shift, and go to state 91
    _BOOLOP  shift, and go to state 53


State 78

   64 basic_bool: _NOT _LPAREN basic_bool _RPAREN .

    $default  reduce using rule 64 (basic_bool)


State 79

   65 basic_bool: _NOT _LPAREN exp _RPAREN .

    $default  reduce using rule 65 (basic_bool)


State 80

   75 exp: _LPAREN . num_exp _RPAREN
   76    | _LPAREN . conditional_exp _RPAREN
   79 conditional_exp: _LPAREN . bool_exp _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp          go to state 44
    basic_bool       go to state 29
    bool_exp         go to state 92
    inc_exp          go to state 31
    exp              go to state 32
    conditional_exp  go to state 46
    literal          go to state 34
    function_call    go to state 35
    rel_exp          go to state 36


State 81

   60 num_exp: num_exp . _AROP exp
   75 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 60
    _AROP    shift, and go to state 50


State 82

   19 body: _LBRACKET . variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 20 (variable_list)

    variable_list  go to state 93


State 83

   12 function: _TYPE _ID $@2 _LPAREN real_param_list $@3 _RPAREN body .

    $default  reduce using rule 12 (function)


State 84

   60 num_exp: num_exp . _AROP exp
   80 exp_c: num_exp .
   97 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 50
    _RELOP  shift, and go to state 51

    $default  reduce using rule 80 (exp_c)


State 85

   68 bool_exp: bool_exp . _BOOLOP basic_bool
   81 exp_c: bool_exp .

    _BOOLOP  shift, and go to state 53

    $default  reduce using rule 81 (exp_c)


State 86

   91 argument: exp_c .

    $default  reduce using rule 91 (argument)


State 87

   86 function_call: _ID $@21 _LPAREN $@22 real_arg_list . _RPAREN

    _RPAREN  shift, and go to state 94


State 88

   88 real_arg_list: argument_list .
   90 argument_list: argument_list . _COMMA argument

    _COMMA  shift, and go to state 95

    $default  reduce using rule 88 (real_arg_list)


State 89

   89 argument_list: argument .

    $default  reduce using rule 89 (argument_list)


State 90

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK @19 . exp_c @20 _DOUBLEDOT exp_c

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 84
    basic_bool     go to state 29
    bool_exp       go to state 85
    inc_exp        go to state 31
    exp            go to state 32
    exp_c          go to state 96
    literal        go to state 34
    function_call  go to state 35
    rel_exp        go to state 36


State 91

   66 basic_bool: _LPAREN bool_exp _RPAREN .

    $default  reduce using rule 66 (basic_bool)


State 92

   68 bool_exp: bool_exp . _BOOLOP basic_bool
   79 conditional_exp: _LPAREN bool_exp . _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

    _RPAREN  shift, and go to state 97
    _BOOLOP  shift, and go to state 53


State 93

   19 body: _LBRACKET variable_list . $@4 statement_list _RBRACKET
   21 variable_list: variable_list . variable

    _TYPE  shift, and go to state 98

    $default  reduce using rule 18 ($@4)

    $@4       go to state 99
    variable  go to state 100


State 94

   86 function_call: _ID $@21 _LPAREN $@22 real_arg_list _RPAREN .

    $default  reduce using rule 86 (function_call)


State 95

   90 argument_list: argument_list _COMMA . argument

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 84
    basic_bool     go to state 29
    bool_exp       go to state 85
    inc_exp        go to state 31
    exp            go to state 32
    exp_c          go to state 86
    literal        go to state 34
    function_call  go to state 35
    argument       go to state 101
    rel_exp        go to state 36


State 96

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK @19 exp_c . @20 _DOUBLEDOT exp_c

    $default  reduce using rule 78 (@20)

    @20  go to state 102


State 97

   79 conditional_exp: _LPAREN bool_exp _RPAREN . _QMARK @19 exp_c @20 _DOUBLEDOT exp_c

    _QMARK  shift, and go to state 76


State 98

   23 variable: _TYPE . $@5 id_list opt_assign

    $default  reduce using rule 22 ($@5)

    $@5  go to state 103


State 99

   19 body: _LBRACKET variable_list $@4 . statement_list _RBRACKET

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 104


State 100

   21 variable_list: variable_list variable .

    $default  reduce using rule 21 (variable_list)


State 101

   90 argument_list: argument_list _COMMA argument .

    $default  reduce using rule 90 (argument_list)


State 102

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK @19 exp_c @20 . _DOUBLEDOT exp_c

    _DOUBLEDOT  shift, and go to state 105


State 103

   23 variable: _TYPE $@5 . id_list opt_assign

    _ID  shift, and go to state 106

    id_list  go to state 107


State 104

   19 body: _LBRACKET variable_list $@4 statement_list . _RBRACKET
   29 statement_list: statement_list . statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _RBRACKET     shift, and go to state 114
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 115
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 105

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT . exp_c

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 84
    basic_bool     go to state 29
    bool_exp       go to state 85
    inc_exp        go to state 31
    exp            go to state 32
    exp_c          go to state 124
    literal        go to state 34
    function_call  go to state 35
    rel_exp        go to state 36


State 106

   26 id_list: _ID .

    $default  reduce using rule 26 (id_list)


State 107

   23 variable: _TYPE $@5 id_list . opt_assign
   27 id_list: id_list . _COMMA _ID

    _ASSIGN     shift, and go to state 14
    _SEMICOLON  shift, and go to state 15
    _COMMA      shift, and go to state 125

    opt_assign  go to state 126


State 108

   96 if_part: _IF . _LPAREN @23 bool_exp $@24 _RPAREN statement

    _LPAREN  shift, and go to state 127


State 109

   98 return_statement: _RETURN . num_exp _SEMICOLON
   99                 | _RETURN . bool_exp _SEMICOLON
  100                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _SEMICOLON    shift, and go to state 128
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 129
    basic_bool     go to state 29
    bool_exp       go to state 130
    inc_exp        go to state 31
    exp            go to state 32
    literal        go to state 34
    function_call  go to state 35
    rel_exp        go to state 36


State 110

   51 para_statement: _PARA . $@16 _ID $@17 _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement

    $default  reduce using rule 48 ($@16)

    $@16  go to state 131


State 111

   47 branch_statement: _BRANCH . $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 37 ($@6)

    $@6  go to state 132


State 112

   58 assignment_statement: _ID . _ASSIGN exp_statement
   69 inc_exp: _ID . _INCOP
   73 exp: _ID .
   86 function_call: _ID . $@21 _LPAREN $@22 real_arg_list _RPAREN

    _ASSIGN  shift, and go to state 133
    _INCOP   shift, and go to state 42

    _LPAREN   reduce using rule 84 ($@21)
    $default  reduce using rule 73 (exp)

    $@21  go to state 43


State 113

   57 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 134


State 114

   19 body: _LBRACKET variable_list $@4 statement_list _RBRACKET .

    $default  reduce using rule 19 (body)


State 115

   29 statement_list: statement_list statement .

    $default  reduce using rule 29 (statement_list)


State 116

   35 statement: branch_statement .

    $default  reduce using rule 35 (statement)


State 117

   34 statement: para_statement .

    $default  reduce using rule 34 (statement)


State 118

   33 statement: exp_statement .

    $default  reduce using rule 33 (statement)


State 119

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


State 120

   31 statement: assignment_statement .

    $default  reduce using rule 31 (statement)


State 121

   32 statement: if_statement .

    $default  reduce using rule 32 (statement)


State 122

   92 if_statement: if_part .
   93             | if_part . _ELSE statement

    _ELSE  shift, and go to state 135

    $default  reduce using rule 92 (if_statement)


State 123

   36 statement: return_statement .

    $default  reduce using rule 36 (statement)


State 124

   79 conditional_exp: _LPAREN bool_exp _RPAREN _QMARK @19 exp_c @20 _DOUBLEDOT exp_c .

    $default  reduce using rule 79 (conditional_exp)


State 125

   27 id_list: id_list _COMMA . _ID

    _ID  shift, and go to state 136


State 126

   23 variable: _TYPE $@5 id_list opt_assign .

    $default  reduce using rule 23 (variable)


State 127

   96 if_part: _IF _LPAREN . @23 bool_exp $@24 _RPAREN statement

    $default  reduce using rule 94 (@23)

    @23  go to state 137


State 128

  100 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 100 (return_statement)


State 129

   60 num_exp: num_exp . _AROP exp
   97 rel_exp: num_exp . _RELOP num_exp
   98 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 138
    _AROP       shift, and go to state 50
    _RELOP      shift, and go to state 51


State 130

   68 bool_exp: bool_exp . _BOOLOP basic_bool
   99 return_statement: _RETURN bool_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 139
    _BOOLOP     shift, and go to state 53


State 131

   51 para_statement: _PARA $@16 . _ID $@17 _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement

    _ID  shift, and go to state 140


State 132

   47 branch_statement: _BRANCH $@6 . _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _LSQRBRACKET  shift, and go to state 141


State 133

   58 assignment_statement: _ID _ASSIGN . exp_statement

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    exp_statement    go to state 142
    num_exp          go to state 28
    basic_bool       go to state 29
    bool_exp         go to state 30
    inc_exp          go to state 31
    exp              go to state 32
    conditional_exp  go to state 33
    literal          go to state 34
    function_call    go to state 35
    rel_exp          go to state 36


State 134

   29 statement_list: statement_list . statement
   57 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _RBRACKET     shift, and go to state 143
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 115
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 135

   93 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 144
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 136

   27 id_list: id_list _COMMA _ID .

    $default  reduce using rule 27 (id_list)


State 137

   96 if_part: _IF _LPAREN @23 . bool_exp $@24 _RPAREN statement

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 63
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    num_exp        go to state 64
    basic_bool     go to state 29
    bool_exp       go to state 145
    inc_exp        go to state 31
    exp            go to state 32
    literal        go to state 34
    function_call  go to state 35
    rel_exp        go to state 36


State 138

   98 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 98 (return_statement)


State 139

   99 return_statement: _RETURN bool_exp _SEMICOLON .

    $default  reduce using rule 99 (return_statement)


State 140

   51 para_statement: _PARA $@16 _ID . $@17 _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement

    $default  reduce using rule 49 ($@17)

    $@17  go to state 146


State 141

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET . _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _ID  shift, and go to state 147


State 142

   58 assignment_statement: _ID _ASSIGN exp_statement .

    $default  reduce using rule 58 (assignment_statement)


State 143

   57 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 57 (compound_statement)


State 144

   93 if_statement: if_part _ELSE statement .

    $default  reduce using rule 93 (if_statement)


State 145

   68 bool_exp: bool_exp . _BOOLOP basic_bool
   96 if_part: _IF _LPAREN @23 bool_exp . $@24 _RPAREN statement

    _BOOLOP  shift, and go to state 53

    $default  reduce using rule 95 ($@24)

    $@24  go to state 148


State 146

   51 para_statement: _PARA $@16 _ID $@17 . _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement

    _EN  shift, and go to state 149


State 147

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID . $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 38 ($@7)

    $@7  go to state 150


State 148

   96 if_part: _IF _LPAREN @23 bool_exp $@24 . _RPAREN statement

    _RPAREN  shift, and go to state 151


State 149

   51 para_statement: _PARA $@16 _ID $@17 _EN . _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement

    _LPAREN  shift, and go to state 152


State 150

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 . _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _RARROW  shift, and go to state 153


State 151

   96 if_part: _IF _LPAREN @23 bool_exp $@24 _RPAREN . statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 154
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 152

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN . literal _DDOT literal paso_part @18 _RPAREN statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 155


State 153

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW . literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 156


State 154

   96 if_part: _IF _LPAREN @23 bool_exp $@24 _RPAREN statement .

    $default  reduce using rule 96 (if_part)


State 155

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal . _DDOT literal paso_part @18 _RPAREN statement

    _DDOT  shift, and go to state 157


State 156

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal . _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _RARROW  shift, and go to state 158


State 157

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT . literal paso_part @18 _RPAREN statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 159


State 158

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW . literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 160


State 159

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT literal . paso_part @18 _RPAREN statement

    _PASO  shift, and go to state 161

    $default  reduce using rule 52 (paso_part)

    paso_part  go to state 162


State 160

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal . _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _RARROW  shift, and go to state 163


State 161

   53 paso_part: _PASO . literal

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 164


State 162

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT literal paso_part . @18 _RPAREN statement

    $default  reduce using rule 50 (@18)

    @18  go to state 165


State 163

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW . literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 166


State 164

   53 paso_part: _PASO literal .

    $default  reduce using rule 53 (paso_part)


State 165

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT literal paso_part @18 . _RPAREN statement

    _RPAREN  shift, and go to state 167


State 166

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal . _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _RSQRBRACKET  shift, and go to state 168


State 167

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN . statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 169
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 168

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET . $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 39 ($@8)

    $@8  go to state 170


State 169

   51 para_statement: _PARA $@16 _ID $@17 _EN _LPAREN literal _DDOT literal paso_part @18 _RPAREN statement .

    $default  reduce using rule 51 (para_statement)


State 170

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 . _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _FIRST  shift, and go to state 171


State 171

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST . $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 40 ($@9)

    $@9  go to state 172


State 172

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 . statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 173
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 173

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement . $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 41 ($@10)

    $@10  go to state 174


State 174

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 . _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _SECOND  shift, and go to state 175


State 175

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND . $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 42 ($@11)

    $@11  go to state 176


State 176

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 . statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 177
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 177

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement . $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 43 ($@12)

    $@12  go to state 178


State 178

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 . _THIRD $@13 statement $@14 _OTHERWISE $@15 statement

    _THIRD  shift, and go to state 179


State 179

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD . $@13 statement $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 44 ($@13)

    $@13  go to state 180


State 180

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 . statement $@14 _OTHERWISE $@15 statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 181
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 181

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement . $@14 _OTHERWISE $@15 statement

    $default  reduce using rule 45 ($@14)

    $@14  go to state 182


State 182

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 . _OTHERWISE $@15 statement

    _OTHERWISE  shift, and go to state 183


State 183

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE . $@15 statement

    $default  reduce using rule 46 ($@15)

    $@15  go to state 184


State 184

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 . statement

    _IF           shift, and go to state 108
    _RETURN       shift, and go to state 109
    _PARA         shift, and go to state 110
    _BRANCH       shift, and go to state 111
    _ID           shift, and go to state 112
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _BOOL_VALUE   shift, and go to state 23
    _LPAREN       shift, and go to state 24
    _LBRACKET     shift, and go to state 113
    _NOT          shift, and go to state 25
    _INCOP        shift, and go to state 26

    statement             go to state 185
    branch_statement      go to state 116
    para_statement        go to state 117
    exp_statement         go to state 118
    compound_statement    go to state 119
    assignment_statement  go to state 120
    num_exp               go to state 28
    basic_bool            go to state 29
    bool_exp              go to state 30
    inc_exp               go to state 31
    exp                   go to state 32
    conditional_exp       go to state 33
    literal               go to state 34
    function_call         go to state 35
    if_statement          go to state 121
    if_part               go to state 122
    rel_exp               go to state 36
    return_statement      go to state 123


State 185

   47 branch_statement: _BRANCH $@6 _LSQRBRACKET _ID $@7 _RARROW literal _RARROW literal _RARROW literal _RSQRBRACKET $@8 _FIRST $@9 statement $@10 _SECOND $@11 statement $@12 _THIRD $@13 statement $@14 _OTHERWISE $@15 statement .

    $default  reduce using rule 47 (branch_statement)
